{"version":3,"sources":["view/PlayBox.js","view/ChangeBese64.js","view/ShowBox.js","App.js","index.js"],"names":["TabPane","Tabs","PlayBox","props","state","isfirst","player","list","progress","custnum","columns","iscust","colors","colorindex","iscreate","timer","canvas","createRef","this","clear","downloader","Downloader","parser","Parser","Player","current","createTable","a","get","file","fileData","do","svgaData","set","loop","fillMode","mount","key","obj","_renderer","_bitmapCache","hasOwnProperty","src","setState","length","name","pic","$on","setInterval","createImages","_animator","duration","clearTimer","e","videoItem","frames","clearInterval","setTimeout","start","onPlay","toDataURL","title","dataIndex","width","render","alt","style","height","backgroundColor","record","index","onClick","onDownLoad","bind","type","marginRight","onDel","danger","splice","getListIndex","i","saveAs","onclear","_isRunning","zip","JSZip","img","folder","forEach","item","split","base64","generateAsync","then","content","value","className","defaultActiveKey","onChange","callback","tab","ref","percent","showInfo","marginTop","videoSize","map","onChangeColor","disabled","onCreate","onDownloadAll","icon","DownloadOutlined","onClear","marginBottom","size","defaultChecked","onChangeSlider","max","min","defaultValue","dataSource","React","Component","Search","Input","ChangeBese64","error","trim","createAnimation","l","len","$chars","maxPos","pwd","charAt","Math","floor","random","message","randomString","marginLeft","placeholder","enterButton","onSearch","margin","maxHeight","onDownload","Header","Layout","Footer","Content","ShowBox","isdrop","ischange","showbox","fileinput","ondragover","ondrop","ondragenterbox","ondragleavebox","ondropintobox","loadMyFile","document","addEventListener","newprop","newstate","stopPropagation","preventDefault","dataTransfer","files","names","reader","FileReader","readAsDataURL","onload","console","log","result","target","changeBase64State","href","rel","GithubOutlined","shape","SyncOutlined","accept","onChangeFile","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ce47f61a.chunk.js","sourcesContent":["import React, { createRef } from 'react';\r\nimport { Downloader, Parser, Player } from 'svga.lite';\r\nimport { Button, Progress, Table, Tabs, Switch, Slider } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass PlayBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isfirst: true,\r\n            player: null,\r\n            list: [],\r\n            progress: 0,\r\n            custnum: 1,\r\n            columns: [],\r\n            iscust: false,\r\n            colors: ['#000000', '#ffffff', 'rgb(234, 236, 63)', 'rgb(235, 75, 47)', '#596feb', '#b4e93a'],\r\n            colorindex: 0,\r\n            iscreate:true,\r\n            timer:null\r\n        }\r\n        this.canvas = createRef();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n       this.state.player&&this.state.player.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const downloader = new Downloader();\r\n        const parser = new Parser();\r\n        const player = new Player(this.canvas.current);\r\n\r\n        this.createTable();\r\n\r\n        ; (async () => {\r\n\r\n            // this.canvas.current.width = this.canvas.current.clientWidth;\r\n            // this.canvas.current.height = this.canvas.current.clientHeight;\r\n\r\n            const fileData = await downloader.get(this.props.file)\r\n            const svgaData = await parser.do(fileData);\r\n\r\n            player.set({\r\n                loop: 1,\r\n                fillMode: 'forwards'\r\n            });\r\n\r\n            await player.mount(svgaData);\r\n\r\n            let obj = player._renderer._bitmapCache;\r\n            for (const key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    const src = obj[key].src;\r\n                    this.setState({\r\n                        list: [...this.state.list, {\r\n                            key: this.state.list.length,\r\n                            name: `img_${this.state.list.length}`,\r\n                            pic: src\r\n                        }]\r\n                    })\r\n                }\r\n            }\r\n\r\n            player\r\n                .$on('start', () => {\r\n                    this.setState({\r\n                        progress: 0\r\n                    });\r\n                    if(this.state.iscreate){\r\n                        // if(player.videoItem.frames>this.state.list.length&&!this.state.iscust){\r\n                        //     this.createImages();\r\n                        // }\r\n                        if(this.state.iscust){\r\n                            //this.createImages();\r\n                            let timer = setInterval(()=>{\r\n                                this.createImages();\r\n                            },player._animator.duration/this.state.custnum);\r\n                            this.setState({\r\n                                timer\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .$on('pause', () => {                   \r\n                    this.clearTimer();\r\n                })\r\n                .$on('stop', () => {\r\n                    this.clearTimer();\r\n                })\r\n                .$on('end', () => {\r\n                    this.clearTimer();\r\n                })\r\n                .$on('clear', () => {\r\n                    this.clearTimer();\r\n                })\r\n                .$on('process', (e) => {\r\n                    this.setState({\r\n                        progress: player.progress\r\n                    });\r\n                    if(this.state.iscreate&&!this.state.iscust){\r\n                        if(player.videoItem.frames>this.state.list.length){\r\n                            this.createImages();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            this.setState({\r\n                player\r\n            });\r\n\r\n            //this.state.player.start();\r\n\r\n            //console.log(this.state.player)\r\n        })()\r\n    }\r\n\r\n    clearTimer(){\r\n        if(this.state.timer){\r\n            clearInterval(this.state.timer);\r\n        }\r\n        this.setState({timer:null});\r\n    }\r\n\r\n    onPlay(){\r\n        this.setState({\r\n            iscreate:false\r\n        });\r\n        setTimeout(() => {\r\n            this.state.player.start();\r\n        }, 200)\r\n    }\r\n\r\n    onCreate() {\r\n        this.onPlay();\r\n        this.setState({\r\n            list: [],\r\n            iscreate:true\r\n        });\r\n    }\r\n\r\n    createImages() {\r\n        this.setState({\r\n            list: [...this.state.list, {\r\n                key: this.state.list.length,\r\n                name: `img_${this.state.list.length}`,\r\n                pic: this.canvas.current.toDataURL(\"image/png\")\r\n            }]\r\n        });\r\n    }\r\n\r\n    callback(key) {\r\n        //console.log(key);\r\n    }\r\n\r\n    createTable() {\r\n        this.setState({\r\n            columns: [\r\n                {\r\n                    title: 'Name',\r\n                    dataIndex: 'name',\r\n                    key: 'name',\r\n                    width: 120,\r\n                },\r\n                {\r\n                    title: 'Image',\r\n                    dataIndex: 'pic',\r\n                    key: 'pic',\r\n                    render: src => (\r\n                        <>\r\n                            <img alt=\"\" src={src} style={{ height: \"100px\", backgroundColor: `${this.state.colors[this.state.colorindex]}` }} />\r\n                        </>\r\n                    ),\r\n                    width: 180,\r\n                },\r\n                {\r\n                    title: 'Edit',\r\n                    dataIndex: 'key',\r\n                    key: 'key',\r\n                    render: (key, record, index) => (\r\n                        <>\r\n                            <Button onClick={this.onDownLoad.bind(this, key, record, index)} type=\"primary\" style={{ marginRight: \"10px\" }}>download</Button>\r\n                            <Button onClick={this.onDel.bind(this, key, record, index)} type=\"primary\" danger>delete</Button>\r\n                        </>\r\n                    )\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    onDel(key, record, index) {\r\n        let list = [...this.state.list];\r\n        list.splice(this.getListIndex(record, list), 1);\r\n        this.setState({\r\n            list\r\n        })\r\n    }\r\n\r\n    getListIndex(obj,list){\r\n        for (let i = 0; i < list.length; i++) {\r\n            if(obj.key===list[i].key){\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    onDownLoad(key, record, index) {\r\n        saveAs(record[\"pic\"], `${record[\"name\"]}.png`);\r\n    }\r\n\r\n    onClear() {\r\n        this.setState({\r\n            list: [],\r\n            player: null,\r\n            custnum:1\r\n        });\r\n        this.props.onclear();\r\n    }\r\n\r\n    onChange() {\r\n        if(this.state.player._animator._isRunning){\r\n            return false;\r\n        }\r\n        this.setState({\r\n            iscust: !this.state.iscust\r\n        })\r\n    }\r\n\r\n    onDownloadAll() {\r\n        let zip = new JSZip();\r\n        let img = zip.folder(\"images\");\r\n        this.state.list.forEach(item => {\r\n            img.file(`${item[\"name\"]}.png`, item[\"pic\"].split(',')[1], { base64: true });\r\n        })\r\n        zip.generateAsync({ type: \"blob\" })\r\n            .then(function (content) {\r\n                saveAs(content, \"images.zip\");\r\n            });\r\n    }\r\n\r\n    onChangeColor(index) {\r\n        this.setState({\r\n            colorindex: index\r\n        })\r\n    }\r\n\r\n    onChangeSlider(value){\r\n        if(this.state.player._animator._isRunning){\r\n            return false;\r\n        }\r\n        this.setState({\r\n            custnum:value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { player, progress, columns, list, iscust, custnum, colors, colorindex } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"play-box\">\r\n\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callback.bind(this)}>\r\n                        <TabPane tab=\"Control\" key=\"1\">\r\n                            <canvas style={{ backgroundColor: colors[colorindex] }} ref={this.canvas}></canvas>\r\n\r\n                            <Progress percent={progress} showInfo={false} style={{ marginTop: \"30px\" }} />\r\n\r\n                            <ul className=\"play-box-info\">\r\n                                <li>\r\n                                    status: {player != null ? (player._animator._isRunning ? 'playing' : 'complete') : 'stop'}\r\n                                </li>\r\n                                <li>\r\n                                    duration: {player != null ? (player._animator.duration + 'ms') : 'null'}\r\n                                </li>\r\n                                <li>\r\n                                    frames: {player != null ? (player.videoItem.frames) : '0'}\r\n                                </li>\r\n                                <li>\r\n                                    {player != null ? (`width: ${player.videoItem.videoSize.width} height: ${player.videoItem.videoSize.height}`) : \"\"}\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <ul className=\"color-box\">\r\n                                {colors.map((item, index) => (<li onClick={this.onChangeColor.bind(this, index)} key={index} style={{ backgroundColor: `${item}` }}></li>))}\r\n                            </ul>\r\n\r\n                            <div>\r\n                                <Button type=\"primary\" onClick={this.onPlay.bind(this)} style={{ marginRight: \"10px\" }} disabled={player && player._animator._isRunning}>Play</Button>\r\n                                <Button type=\"primary\" onClick={this.onCreate.bind(this)} style={{ marginRight: \"10px\" }} disabled={player && player._animator._isRunning}>Create</Button>\r\n                                <Button type=\"primary\" onClick={this.onDownloadAll.bind(this)} icon={<DownloadOutlined />} style={{ marginRight: \"10px\" }} disabled={player && player._animator._isRunning}>Download all</Button>\r\n                                <Button type=\"primary\" onClick={this.onClear.bind(this)} disabled={player && player._animator._isRunning} danger>Destroy</Button>\r\n                            </div>\r\n\r\n                            {\r\n                                player&&player._animator._isRunning?\"\":(\r\n                                    <div style={{marginTop: \"30px\", marginBottom: \"30px\" }}>\r\n                                        <label>custom：</label> <Switch size=\"small\" defaultChecked={iscust} onChange={this.onChange.bind(this)} />\r\n                                        <Slider onChange={this.onChangeSlider.bind(this)} max={player != null?(player.videoItem.frames):100} min={1} defaultValue={custnum} disabled={!iscust} />\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n\r\n                        </TabPane>\r\n\r\n                        <TabPane tab=\"More\" key=\"2\">\r\n                            <Table columns={columns} dataSource={list} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayBox;","import { Downloader, Parser, Player } from 'svga.lite';\r\nimport React, { Component, createRef } from 'react';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { saveAs } from 'file-saver';\r\nimport { Input, message, Button } from 'antd';\r\nconst { Search } = Input;\r\n\r\n\r\nclass ChangeBese64 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            file: \"\",\r\n            player:null\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.canvas = createRef();\r\n    }\r\n\r\n    onChange(value) {\r\n        if (value === '' || value.trim() === '') {\r\n            return false;\r\n        }\r\n        this.createAnimation(value);\r\n        this.setState({\r\n            file: value\r\n        })\r\n    }\r\n\r\n    randomString(l) {\r\n        let len = l || 32;\r\n        let $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\r\n        let maxPos = $chars.length;\r\n        let pwd = '';\r\n        for (let i = 0; i < len; i++) {\r\n            pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\r\n        }\r\n        return pwd;\r\n    }\r\n\r\n   createAnimation(file) {\r\n        const downloader = new Downloader();\r\n        const parser = new Parser();\r\n\r\n        ; (async () => {\r\n            let player = null;\r\n            if(this.state.player==null){\r\n                player = new Player(this.canvas.current);\r\n                this.setState({\r\n                    player\r\n                })\r\n            }else{\r\n                player = this.state.player;\r\n            }\r\n            try {\r\n                const fileData = await downloader.get(file);\r\n                const svgaData = await parser.do(fileData);\r\n                player.clear();\r\n                player.set({\r\n                    loop: -1,\r\n                    fillMode: 'forwards'\r\n                });\r\n\r\n                await player.mount(svgaData);\r\n                player.start();\r\n            }\r\n            catch{\r\n                this.setState({\r\n                    file: \"\"\r\n                })\r\n                message.error(\"error svga\")\r\n            }\r\n        })();\r\n\r\n    }\r\n\r\n    // dataURLtoFile(dataurl, filename) {\r\n    //     let arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n    //         bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n    //     while(n--){\r\n    //         u8arr[n] = bstr.charCodeAt(n);\r\n    //     }\r\n    //     return new File([u8arr], filename, {type:mime});\r\n    // }\r\n\r\n    onDownload() {\r\n        if (this.state.file === \"\") return;\r\n        saveAs(this.state.file, `${this.randomString(8)}.svga`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Search\r\n                    style={{ width: \"640px\", marginLeft: \"27px\", marginTop: \"30px\", marginBottom: \"30px\" }}\r\n                    placeholder=\"input base64 text\"\r\n                    enterButton=\"change\"\r\n                    size=\"large\"\r\n                    onSearch={this.onChange}\r\n                />\r\n                <div style={{ margin: \"30px\" }}>\r\n                    <canvas style={{ backgroundColor: \"#000000\", maxHeight:\"480px\" }} ref={this.canvas}></canvas>\r\n                </div>\r\n                <Button style={{ marginLeft: \"30px\" }} disabled={this.state.file === \"\"} type=\"primary\" icon={<DownloadOutlined />} onClick={this.onDownload.bind(this)} >\r\n                    Download\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChangeBese64;","import React, { createRef } from 'react';\r\nimport PlayBox from './PlayBox';\r\nimport ChangeBese64 from './ChangeBese64';\r\n\r\nimport { GithubOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { message, Layout, Button } from 'antd';\r\nconst { Header, Footer, Content } = Layout;\r\n\r\n\r\n\r\nclass ShowBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: \"\",\r\n            isdrop: false,\r\n            ischange: false\r\n        }\r\n        this.showbox = createRef();\r\n        this.fileinput = createRef();\r\n\r\n        this.ondragover = this.ondragover.bind(this);\r\n        this.ondrop = this.ondrop.bind(this);\r\n        this.ondragenterbox = this.ondragenterbox.bind(this);\r\n        this.ondragleavebox = this.ondragleavebox.bind(this);\r\n        this.ondropintobox = this.ondropintobox.bind(this);\r\n        this.loadMyFile = this.loadMyFile.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"drop\", this.ondrop);\r\n        document.addEventListener(\"dragover\", this.ondragover);\r\n        this.showbox.current.addEventListener(\"dragenter\", this.ondragenterbox);\r\n        this.showbox.current.addEventListener(\"dragleave\", this.ondragleavebox);\r\n        this.showbox.current.addEventListener(\"drop\", this.ondropintobox);\r\n    }\r\n\r\n    componentDidUpdate(newprop, newstate) {\r\n        if (newstate.ischange) {\r\n            this.showbox.current.addEventListener(\"dragenter\", this.ondragenterbox);\r\n            this.showbox.current.addEventListener(\"dragleave\", this.ondragleavebox);\r\n            this.showbox.current.addEventListener(\"drop\", this.ondropintobox);\r\n        }\r\n    }\r\n\r\n    ondragover(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    ondrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    ondragleavebox(e) {\r\n        this.setState({ isdrop: false })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    ondragenterbox(e) {\r\n        this.setState({ isdrop: true })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    ondropintobox(e) {\r\n        this.setState({\r\n            isdrop: false\r\n        });\r\n        let file = e.dataTransfer.files[0];\r\n        let names = file.name.split(\".\");\r\n        if (names[names.length - 1] !== \"svga\") {\r\n            message.error('no svga');\r\n            return false;\r\n        }\r\n        this.loadMyFile(file);\r\n    }\r\n\r\n    loadMyFile(file) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            console.log(reader.result)\r\n            this.setState({\r\n                file: reader.result\r\n            })\r\n        }\r\n    }\r\n\r\n    onClear() {\r\n        if (this.fileinput.current) this.fileinput.current.value = \"\";\r\n        this.setState({\r\n            file: \"\"\r\n        })\r\n    }\r\n\r\n    onChangeFile(e) {\r\n        if (this.fileinput.current.value === \"\") return false;\r\n        let names = e.target.files[0].name.split(\".\");\r\n        if (names[names.length - 1] !== \"svga\") {\r\n            message.error('no svga');\r\n            return false;\r\n        }\r\n        this.loadMyFile(e.target.files[0])\r\n    }\r\n\r\n    changeBase64State(state) {\r\n        this.setState({\r\n            ischange: state\r\n        });\r\n        this.onClear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Layout className=\"main\">\r\n                    <Layout>\r\n                        <Header>\r\n                            <span className=\"logo\" onClick={this.changeBase64State.bind(this, false)}>SVGA TO PNGS</span>\r\n                            <a className=\"github-link\" href=\"https://github.com/jsmask\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <GithubOutlined className=\"github-svg\" />\r\n                            </a>\r\n\r\n                            <Button style={{ marginLeft: \"60px\" }} onClick={this.changeBase64State.bind(this, !this.state.ischange)} type=\"primary\" shape=\"round\">\r\n                                <SyncOutlined />\r\n                                {\r\n                                    !this.state.ischange ? 'base64 change' : 'to pngs'\r\n                                }\r\n\r\n                            </Button>\r\n\r\n                        </Header>\r\n                        <Content>\r\n                            {\r\n                                this.state.ischange === false ?\r\n                                    (\r\n                                        <div ref={this.showbox} className={`show-box ${this.state.isdrop === true ? 'is-active' : ''}`}>\r\n                                            <input ref={this.fileinput} type=\"file\" accept=\"*.svga\" onChange={this.onChangeFile.bind(this)} />\r\n                                            {this.state.file === \"\" ? \"\" : <PlayBox file={this.state.file} onclear={this.onClear.bind(this)} />}\r\n                                        </div>\r\n                                    ) : <ChangeBese64 />\r\n                            }\r\n\r\n\r\n                        </Content>\r\n                        <Footer>\r\n\r\n                        </Footer>\r\n                    </Layout>\r\n                </Layout>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowBox;","import React from 'react';\nimport ShowBox from './view/ShowBox';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <ShowBox></ShowBox>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}