{"version":3,"sources":["assets/script/BuildSystem.js","assets/script/bindBack.js","assets/script/common/common.js","assets/script/parameter/lead.js","assets/script/loadGame.js","assets/script/loadTALK.js","assets/script/parameter/option.js","assets/script/parameter/prop.js","assets/script/parameter/school.js","assets/script/parameter/setparms.js","assets/script/parameter/skill.js","assets/script/common/system.js"],"names":["parms","require","cc","Class","extends","Component","properties","onLoad","_this","this","list","node","getChildByName","getChildren","i","length","on","Node","EventType","TOUCH_END","e","active","setBuild","setAbility","console","log","getAll","box","default","type","api","getDate","section","arguments","chnNumChar","chnUnitChar","strIns","chnStr","unitPos","zero","v","Math","floor","module","exports","option","name","school","ability","Money","MAXHP","HP","MAXMP","MP","ATN","DEF","SPD","WIL","LER","WGT","repute","justice","equipment","skill","prop","army","build","common","system","around","Label","moeny","instructions_build","build_system","stu_box","sys_box","string","getAbility","runAction","moveTo","landbox","item","_name","getBuild","indexOf","start","update","dt","input_box","option_box","next_ico","bg_pic","Sprite","head_pic","talk","RichText","role_name","scenes","num","max","pause","bindInit","_this2","loader","loadRes","RawAsset","err","res","data","progress","spriteFrame","loadFrame","nextPlot","fadeAction","callback","beginAction","sequence","fadeOut","callFunc","fadeIn","_this3","obj","children","TOUCH_START","scale","bindOption","getComponent","_loop","n","setOption","id","showOption","_obj","showInput","relation","editbox","label","EditBox","placeholder","txt","setName","str","substr","querySchool","setSchool","off","_this4","role_pic","status","getName","content","getOptionAll","getSchool","Opening","director","loadScene","SpriteFrame","url","raw","newskill","querySkill","level","setSkill","_prop","getProp","setProp","describe","index","queryProp","Object","assign","populace","lead","filter","call","a","getAbilityAll","getSkillAll","getEquipmentAll","getPropAll","min","push","setEquipment","power","getSkill"],"mappings":"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","sourcesContent":["const parms = require(\"./parameter/setparms\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n\r\n    },\r\n    onLoad() {\r\n        let list = this.node.getChildByName(\"list\").getChildren();\r\n        for (let i = 0; i < list.length; i++) {\r\n            let item = list[0];\r\n            item.on(cc.Node.EventType.TOUCH_END, e => {\r\n                this.node.active = false;\r\n                parms.setBuild(\"land_herb\");\r\n                parms.setAbility(\"Money\", -500);\r\n                console.log(parms.getAll())\r\n            })\r\n        }\r\n    },\r\n\r\n    // update (dt) {},\r\n});","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        box: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, e => {\r\n            this.box.active = false;\r\n        })\r\n    },\r\n});","const system = require(\"system\");\r\nlet api = {\r\n    getDate() {\r\n        let section = ~~arguments[0];\r\n        let chnNumChar = [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"];\r\n        let chnUnitSection = [\"\", \"万\", \"亿\", \"万亿\", \"亿亿\"];\r\n        let chnUnitChar = [\"\", \"十\", \"百\", \"千\"];\r\n        let strIns = '';\r\n        let chnStr = '';\r\n        let unitPos = 0;\r\n        let zero = true;\r\n        while (section > 0) {\r\n            let v = section % 10;\r\n            if (v === 0) {\r\n                if (!zero) {\r\n                    zero = true;\r\n                    chnStr = chnNumChar[v] + chnStr;\r\n                }\r\n            } else {\r\n                zero = false;\r\n                strIns = chnNumChar[v];\r\n                strIns += chnUnitChar[unitPos];\r\n                chnStr = strIns + chnStr;\r\n            }\r\n            unitPos++;\r\n            section = Math.floor(section / 10);\r\n        }\r\n        return chnStr;\r\n    }\r\n}\r\n\r\nmodule.exports = api;","module.exports = {\r\n    option: [],\r\n    name: \"\",\r\n    school: \"\",\r\n    ability: {\r\n        Money: 1000, //金钱\r\n        MAXHP: 50, //最大气血\r\n        HP: 50, //气血\r\n        MAXMP: 20, //最大内力\r\n        MP: 20, //内力\r\n        ATN: 5, //气劲\r\n        DEF: 5, //硬功\r\n        SPD: 5, //轻功\r\n        WIL: 5, //内功\r\n        LER: 5, //悟性\r\n        WGT: 50, //负重\r\n        repute: 0, //声望\r\n        justice: 50 //正义\r\n    },\r\n    equipment: [],\r\n    skill: [],\r\n    prop: [],\r\n    army: [],\r\n    build: []\r\n}","const common = require(\"./common/common\");\r\nconst system = require(\"./common/system\");\r\nconst parms = require(\"./parameter/setparms\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        around: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        moeny: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        repute: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        instructions_build: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n\r\n        let build_system = this.node.getChildByName(\"build_system\");\r\n        let stu_box = this.node.getChildByName(\"stu_box\");\r\n        let sys_box = this.node.getChildByName(\"sys_box\");\r\n\r\n        build_system.active = false;\r\n\r\n        this.around.string = '第' + common.getDate(system.around) + \"回合\";\r\n        this.moeny.string = parms.getAbility(\"Money\");\r\n        this.repute.string = parms.getAbility(\"repute\");\r\n\r\n        stu_box.runAction(cc.moveTo(.4, 0, 290));\r\n        sys_box.runAction(cc.moveTo(.4, 0, -270));\r\n\r\n        this.instructions_build.on(cc.Node.EventType.TOUCH_END, () => {\r\n            build_system.active = true;\r\n        })\r\n\r\n        let landbox = this.node.getChildByName(\"landbox\").getChildren();\r\n        for (let i = 0; i < landbox.length; i++) {\r\n            let item = landbox[i]._name;\r\n            if (parms.getBuild().indexOf(item) > -1 && !landbox[i].active) {\r\n                landbox[i].active = true;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        let landbox = this.node.getChildByName(\"landbox\").getChildren();\r\n        for (let i = 0; i < landbox.length; i++) {\r\n            let item = landbox[i]._name;\r\n            if (parms.getBuild().indexOf(item) > -1 && !landbox[i].active) {\r\n                landbox[i].active = true;\r\n            }\r\n        }\r\n        this.moeny.string = parms.getAbility(\"Money\");\r\n    }\r\n});","const system = require(\"./common/system\");\r\nconst parms = require(\"./parameter/setparms\");\r\nconst school = require(\"./parameter/school\");\r\nconst option = require(\"./parameter/option\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        input_box: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        option_box: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        next_ico: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        bg_pic: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        head_pic: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        talk: {\r\n            default: null,\r\n            type: cc.RichText\r\n        },\r\n        role_name: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        list: [],\r\n        scenes: null,\r\n        num: 0,\r\n        max: null,\r\n        pause: false,\r\n    },\r\n\r\n    onLoad() {\r\n        this.bindInit();\r\n    },\r\n    bindInit() {\r\n        this.option_box.active = false;\r\n        this.input_box.active = false;\r\n        cc.loader.loadRes(\"data/talk\", cc.RawAsset, (err, res) => {\r\n            this.list = res.data[system.progress].list;\r\n            this.scenes = res.data[system.progress].scenes;\r\n            this.max = this.list.length;\r\n            this.bg_pic.spriteFrame = this.loadFrame(res.data[system.progress].bg_pic);\r\n            this.nextPlot();\r\n        })\r\n    },\r\n    fadeAction(callback) {\r\n        let beginAction = cc.sequence(cc.fadeOut(1), cc.callFunc(() => { callback && callback() }), cc.fadeIn(.6))\r\n        this.node.runAction(beginAction);\r\n    },\r\n    start() {\r\n        this.node.on('touchend', () => {\r\n            this.nextPlot();\r\n        });\r\n        for (let i = 0; i < this.option_box.getChildren().length; i++) {\r\n            let obj = this.option_box.children[i];\r\n            ~((i) => {\r\n                obj.on(cc.Node.EventType.TOUCH_START, () => {\r\n                    obj.scale = 1.2;\r\n                }, this)\r\n                obj.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    obj.scale = 1;\r\n                    this.bindOption(i, obj.children[0].getComponent(cc.Label).string);\r\n                }, this)\r\n            })(i);\r\n        }\r\n    },\r\n    bindOption(i, n) {\r\n        parms.setOption({ id: i, name: n });\r\n        // if (parms.getOptionAll().length == 6) {\r\n        //     let _op_id = parms.getOptionAll()[5].id;\r\n        //     if (_op_id == 1) {\r\n        //         this.num = this.max;\r\n        //     }\r\n        // }\r\n        if (n == \"不需要\") {\r\n            this.num = this.max;\r\n        }\r\n        this.pause = false;\r\n        this.num++;\r\n        this.next_ico.active = true;\r\n        this.option_box.active = false;\r\n    },\r\n    showOption(option) {\r\n        var _this = this;\r\n        this.option_box.active = true;\r\n        this.next_ico.active = false;\r\n        for (let i = 0; i < this.option_box.getChildren().length; i++) {\r\n            let obj = this.option_box.children[i];\r\n            obj.scale = 1;\r\n            obj.children[0].getComponent(cc.Label).string = option[i];\r\n            if (option[i]) {\r\n                obj.active = true;\r\n            } else {\r\n                obj.active = false;\r\n            }\r\n        }\r\n    },\r\n    showInput(relation, callback) {\r\n        this.input_box.active = true;\r\n        this.next_ico.active = false;\r\n        let editbox = this.input_box.getChildren()[0].getChildren()[0];\r\n        let label = this.input_box.getChildren()[1];\r\n        label.active = false;\r\n        switch (relation) {\r\n            case \"name\":\r\n                editbox.getComponent(cc.EditBox).placeholder = \"姓甚名谁\";\r\n                break;\r\n            case \"school\":\r\n                editbox.getComponent(cc.EditBox).placeholder = \"何门何派\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        editbox.on('editing-return', e => {\r\n            let txt = editbox.getComponent(cc.EditBox).string;\r\n            if (!txt) return false;\r\n            switch (relation) {\r\n                case \"name\":\r\n                    parms.setName(txt)\r\n                    break;\r\n                case \"school\":\r\n                    let str = txt.substr(txt.length - 1, txt.length);\r\n                    if (str != \"派\" && str != \"门\" && str != \"寨\" && str != \"教\" && str != \"帮\") txt += \"派\";\r\n                    if (school.querySchool(txt)) {\r\n                        label.active = true;\r\n                        label.getComponent(cc.Label).string = \"你好像不是这一派的一份子，请重新填写\";\r\n                        return false;\r\n                    }\r\n                    label.active = false;\r\n                    parms.setSchool(txt)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            editbox.getComponent(cc.EditBox).string = \"\";\r\n            editbox.off(\"editing-return\");\r\n            callback && callback();\r\n        })\r\n    },\r\n    nextPlot() {\r\n        if (this.max > this.num) {\r\n            if (!this.pause) {\r\n                this.head_pic.spriteFrame = this.loadFrame(this.list[this.num].role_pic);\r\n                if (this.list[this.num].status == 0) {\r\n                    this.role_name.string = (parms.getName() || this.list[this.num].role_name) + \":\";\r\n                } else {\r\n                    this.role_name.string = this.list[this.num].role_name + \":\";\r\n                }\r\n                switch (this.list[this.num].type) {\r\n                    case \"0\":\r\n                        this.talk.string = this.list[this.num].content;\r\n                        this.num++;\r\n                        break;\r\n                    case \"1\":\r\n                        this.talk.string = this.list[this.num].content;\r\n                        this.pause = true;\r\n                        this.showOption(this.list[this.num].option);\r\n                        break;\r\n                    case \"2\":\r\n                        this.talk.string = `${this.list[this.num].content[0]}${parms.getOptionAll()[parms.getOptionAll().length-1][\"name\"]}${this.list[this.num].content[1]}${this.list[this.num].option[(parms.getOptionAll())[parms.getOptionAll().length-1][\"id\"]]}${this.list[this.num].content[2]}`;\r\n                        this.num++;\r\n                        break;\r\n                    case \"3\":\r\n                        this.talk.string = this.list[this.num].content;\r\n                        this.pause = true;\r\n                        this.showInput(this.list[this.num].relation, () => {\r\n                            this.pause = false;\r\n                            this.input_box.active = false;\r\n                            this.num++;\r\n                            this.next_ico.active = true;\r\n                            this.nextPlot()\r\n                        });\r\n                        break;\r\n                    case \"4\":\r\n                        let txt = \"\";\r\n                        switch (this.list[this.num].relation) {\r\n                            case \"name\":\r\n                                txt = parms.getName();\r\n                                break;\r\n                            case \"school\":\r\n                                txt = parms.getSchool();\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        this.talk.string = `${this.list[this.num].content[0]}${txt}${this.list[this.num].content[1]}`;\r\n                        this.num++;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (system.progress) {\r\n                case 0:\r\n                    option.Opening();\r\n                    this.pause = true;\r\n                    system.progress = 1;\r\n                    this.fadeAction(() => {\r\n                        this.bindInit();\r\n                        this.pause = false;\r\n                    })\r\n                    break;\r\n                case 1:\r\n                    this.pause = true;\r\n                    system.progress = 2\r\n                    this.fadeAction(() => {\r\n                        this.bindInit();\r\n                        this.pause = false;\r\n                    });\r\n                    break;\r\n                case 2:\r\n                    console.log(parms.getAll())\r\n                    cc.director.loadScene(\"sc_02\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.num = 0;\r\n        }\r\n    },\r\n\r\n    loadFrame() {\r\n        return new cc.SpriteFrame(cc.url.raw(arguments[0]));\r\n    },\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});","const parms = require(\"setparms\");\r\nconst skill = require(\"skill\");\r\nconst prop = require(\"prop\");\r\n\r\n// Money: 0,\r\n// HP: 50, //体力\r\n// MP: 20, //内力\r\n// ATN: 5, //气劲\r\n// DEF: 5, //硬功\r\n// SPD: 5, //轻功\r\n// WIL: 5, //内功\r\n// LER: 5, //悟性\r\n// WGT: 50, //负重\r\n// repute: 5, //声望\r\n// justice: 50 //正义\r\n\r\n\r\nlet api = {\r\n    Opening() {\r\n        let option = parms.getOptionAll(5);\r\n        //问题1：背景\r\n        switch (~~option[0].id) {\r\n            case 0:\r\n                parms.setAbility(\"HP\", 5);\r\n                parms.setAbility(\"MP\", 5);\r\n                parms.setAbility(\"MAXHP\", 5);\r\n                parms.setAbility(\"MAXMP\", 5);\r\n                parms.setAbility(\"ATN\", 1);\r\n                parms.setAbility(\"DEF\", 1);\r\n                break;\r\n            case 1:\r\n                parms.setAbility(\"HP\", 10);\r\n                parms.setAbility(\"MAXHP\", 10);\r\n                parms.setAbility(\"SPD\", 1);\r\n                parms.setAbility(\"WGT\", 5);\r\n                break;\r\n            case 2:\r\n                parms.setAbility(\"MP\", 5);\r\n                parms.setAbility(\"MAXMP\", 5);\r\n                parms.setAbility(\"LER\", 1);\r\n                parms.setAbility(\"WGT\", -2);\r\n                break;\r\n            case 3:\r\n                parms.setAbility(\"HP\", 10);\r\n                parms.setAbility(\"MP\", 5);\r\n                parms.setAbility(\"MAXHP\", 10);\r\n                parms.setAbility(\"MAXMP\", 5);\r\n                parms.setAbility(\"WGT\", 10);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        //问题2：武功\r\n        let newskill = null;\r\n        switch (~~option[1].id) {\r\n            case 0:\r\n                newskill = skill.querySkill(\"太祖长拳\");\r\n                break;\r\n            case 1:\r\n                newskill = skill.querySkill(\"御剑术\");\r\n                break;\r\n            case 2:\r\n                newskill = skill.querySkill(\"柴刀十八路\");\r\n                break;\r\n            case 3:\r\n                newskill = skill.querySkill(\"太祖棍法\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        newskill.level = 1;\r\n        parms.setSkill(newskill);\r\n\r\n        //问题3：强项\r\n        switch (~~option[2].id) {\r\n            case 0:\r\n                parms.setAbility(\"ATN\", 1);\r\n                break;\r\n            case 1:\r\n                parms.setAbility(\"DEF\", 1);\r\n                break;\r\n            case 2:\r\n                parms.setAbility(\"SPD\", 1);\r\n                break;\r\n            case 3:\r\n                parms.setAbility(\"WIL\", 1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //问题4：心性\r\n        switch (~~option[3].id) {\r\n            case 0:\r\n                parms.setAbility(\"HP\", 10);\r\n                parms.setAbility(\"MAXHP\", 10);\r\n                parms.setAbility(\"justice\", 5);\r\n                break;\r\n            case 1:\r\n                parms.setAbility(\"LER\", 1);\r\n                parms.setAbility(\"justice\", 5);\r\n                break;\r\n            case 2:\r\n                parms.setAbility(\"repute\", -5)\r\n                parms.setAbility(\"SPD\", 1);\r\n                break;\r\n            case 3:\r\n                parms.setAbility(\"justice\", -20);\r\n                parms.setAbility(\"WIL\", 1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //问题5：发展\r\n        switch (~~option[4].id) {\r\n            case 0:\r\n                parms.setAbility(\"Money\", 2000);\r\n                break;\r\n            case 1:\r\n                let _prop = prop.getProp(0);\r\n                _prop.num = 1;\r\n                parms.setProp(_prop);\r\n                break;\r\n            case 2:\r\n                //前期会来一名弟子助阵\r\n                break;\r\n            case 3:\r\n                parms.setAbility(\"repute\", 20);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\nmodule.exports = api;","let prop = [\r\n    { id: 0, name: \"吐纳秘典\", describe: \"可习得吐纳心法的典籍。\" }\r\n]\r\n\r\nmodule.exports = {\r\n    getProp() {\r\n        let index = arguments[0];\r\n        if (!index) return prop;\r\n        return prop[index];\r\n    },\r\n    queryProp(name) {\r\n        for (let i = 0; i < prop.length; i++) {\r\n            if (prop[i][\"name\"] === name) return Object.assign(prop[i]);\r\n        }\r\n    }\r\n}","let school = [\r\n    { id: 0, name: \"\" },\r\n    { id: 1, name: \"蓬莱派\", populace: 5 },\r\n    { id: 2, name: \"泰山派\", populace: 13 },\r\n    { id: 3, name: \"黑风寨\", populace: 9 },\r\n    { id: 4, name: \"巨鲸帮\", populace: 11 }\r\n]\r\n\r\nmodule.exports = {\r\n    getSchool() {\r\n        let index = arguments[0];\r\n        if (!index) return skill;\r\n        return school[index];\r\n    },\r\n    querySchool(name) {\r\n        for (let i = 0; i < school.length; i++) {\r\n            if (school[i][\"name\"] === name) return Object.assign(school[i]);\r\n        }\r\n    }\r\n}","const lead = require(\"lead\")\r\nlet api = {\r\n    getAll() {\r\n        return lead;\r\n    },\r\n    getName() {\r\n        return lead.name;\r\n    },\r\n    getSchool() {\r\n        return lead.school;\r\n    },\r\n    getOptionAll() {\r\n        let n = arguments[0];\r\n        if (!n) return lead.option;\r\n        return [].filter.call(lead.option, (a, i) => {\r\n            return i < n\r\n        })\r\n    },\r\n    getAbilityAll() {\r\n        return lead.ability;\r\n    },\r\n    getSkillAll() {\r\n        return lead.skill;\r\n    },\r\n    getEquipmentAll() {\r\n        return lead.equipment;\r\n    },\r\n    getPropAll() {\r\n        return lead.prop;\r\n    },\r\n    getAbility(name) {\r\n        return lead.ability[name];\r\n    },\r\n    setAbility(name, num) {\r\n        lead.ability[name] += ~~num;\r\n        switch (name) {\r\n            case \"Money\":\r\n                lead.ability[\"Money\"] = Math.min(lead.ability[\"Money\"], 99999999)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    setOption(obj) {\r\n        lead.option.push(obj)\r\n    },\r\n    setSkill(obj) {\r\n        lead.skill.push(obj)\r\n    },\r\n    setProp(obj) {\r\n        lead.prop.push(obj)\r\n    },\r\n    setEquipment(obj) {\r\n        lead.equipment.push(obj)\r\n    },\r\n    setName(txt) {\r\n        lead.name = txt;\r\n    },\r\n    setSchool(txt) {\r\n        lead.school = txt;\r\n    },\r\n    setBuild(name) {\r\n        lead.build.push(name)\r\n    },\r\n    getBuild(name) {\r\n        return lead.build;\r\n    }\r\n}\r\n\r\nmodule.exports = api;","let skill = [\r\n    { id: 0, name: \"太祖长拳\", power: 5 },\r\n    { id: 1, name: \"御剑术\", power: 4 },\r\n    { id: 2, name: \"柴刀十八路\", power: 4 },\r\n    { id: 3, name: \"太祖棍法\", power: 3 },\r\n    { id: 4, name: \"吐纳心法\", power: 1 }\r\n]\r\n\r\nmodule.exports = {\r\n    getSkill() {\r\n        let index = arguments[0];\r\n        if (!index) return skill;\r\n        return skill[index];\r\n    },\r\n    querySkill(name) {\r\n        for (let i = 0; i < skill.length; i++) {\r\n            if (skill[i][\"name\"] === name) return Object.assign(skill[i]);\r\n        }\r\n    }\r\n}","module.exports = {\r\n    progress: 0,\r\n    around: 1\r\n}"],"sourceRoot":"/source/","file":"project.js"}