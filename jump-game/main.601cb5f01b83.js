!function(g){var I={};function n(t){if(I[t])return I[t].exports;var c=I[t]={i:t,l:!1,exports:{}};return g[t].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=g,n.c=I,n.d=function(g,I,t){n.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:t})},n.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},n.t=function(g,I){if(1&I&&(g=n(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var c in g)n.d(t,c,function(I){return g[I]}.bind(null,c));return t},n.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return n.d(I,"a",I),I},n.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},n.p="",n(n.s=7)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return common; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return STAGEGROUP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BLOCKTYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BLOCKCONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return BOTTLECONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return STATUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return COLOR; });\nconst common = {\n  canvas: null,\n  width: 300,\n  height: 300,\n  aspect: 1,\n  gravity: 700\n};\nconst STAGEGROUP = {\n  GAMEOVER: "game-over",\n  GAMEMAIN: "game-main"\n};\nconst BLOCKTYPE = {\n  CUBOID: "cuboid",\n  CYLINDER: "cylinder"\n};\nconst BLOCKCONFIG = {\n  width: 16,\n  height: 12\n};\nconst BOTTLECONFIG = {\n  x: -15,\n  y: 0,\n  z: 0\n};\nconst STATUS = {\n  "STOP": "stop",\n  "SKRINK": "shrink",\n  "JUMP": "jump",\n  "FORERAKE": "forerake",\n  "HYPSOKINESIS": "hypsokinesis",\n  "FALL": "fall"\n};\nconst COLOR = [0x329ffc, 0x9fcf1f, 0xf44f3c, 0xffcf00];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9jb21tb24uanM/Y2Y0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29tbW9uID0ge1xyXG4gICAgY2FudmFzOiBudWxsLFxyXG4gICAgd2lkdGg6IDMwMCxcclxuICAgIGhlaWdodDogMzAwLFxyXG4gICAgYXNwZWN0OiAxLFxyXG4gICAgZ3Jhdml0eTogNzAwXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBTVEFHRUdST1VQID0ge1xyXG4gICAgR0FNRU9WRVI6IFwiZ2FtZS1vdmVyXCIsXHJcbiAgICBHQU1FTUFJTjogXCJnYW1lLW1haW5cIlxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQkxPQ0tUWVBFID0ge1xyXG4gICAgQ1VCT0lEOiBcImN1Ym9pZFwiLFxyXG4gICAgQ1lMSU5ERVI6IFwiY3lsaW5kZXJcIlxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQkxPQ0tDT05GSUcgPSB7XHJcbiAgICB3aWR0aDogMTYsXHJcbiAgICBoZWlnaHQ6IDEyXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBCT1RUTEVDT05GSUcgPSB7XHJcbiAgICB4OiAtMTUsXHJcbiAgICB5OiAwLFxyXG4gICAgejogMCxcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFNUQVRVUyA9IHtcclxuICAgIFwiU1RPUFwiOiBcInN0b3BcIixcclxuICAgIFwiU0tSSU5LXCI6IFwic2hyaW5rXCIsXHJcbiAgICBcIkpVTVBcIjogXCJqdW1wXCIsXHJcbiAgICBcIkZPUkVSQUtFXCI6XCJmb3JlcmFrZVwiLFxyXG4gICAgXCJIWVBTT0tJTkVTSVNcIjpcImh5cHNva2luZXNpc1wiLFxyXG4gICAgXCJGQUxMXCI6XCJmYWxsXCJcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IENPTE9SID0gWzB4MzI5ZmZjLCAweDlmY2YxZiwgMHhmNDRmM2MsIDB4ZmZjZjAwXSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQVFBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBU0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},,,function(module,exports,__webpack_require__){eval("var content = __webpack_require__(4);\n\nif (typeof content === 'string') {\n  content = [[module.i, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = __webpack_require__(6)(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3B1YmxpYy9jc3Mvc3R5bGUuY3NzPzFkNWEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG59XG5cbnZhciBvcHRpb25zID0ge31cblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYgKGNvbnRlbnQubG9jYWxzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(5)(false);\n// Module\nexports.push([module.i, "* {\\r\\n    padding  : 0;\\r\\n    margin   : 0;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\n#app {\\r\\n    width : 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    background: #333333;\\r\\n}\\r\\n#app{\\r\\n    box-sizing: border-box;\\r\\n}\\r\\ncanvas {\\r\\n    background: #ffffff;\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n}", ""]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3B1YmxpYy9jc3Mvc3R5bGUuY3NzPzg1MmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXHJcXG4gICAgcGFkZGluZyAgOiAwO1xcclxcbiAgICBtYXJnaW4gICA6IDA7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG59XFxyXFxuXFxyXFxuaHRtbCxcXHJcXG5ib2R5LFxcclxcbiNhcHAge1xcclxcbiAgICB3aWR0aCA6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMzMzMzMzM7XFxyXFxufVxcclxcbiNhcHB7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcbmNhbnZhcyB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICBtYXJnaW46IDAgYXV0bztcXHJcXG59XCIsIFwiXCJdKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], "{").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = "(".concat(item[2], ") and (").concat(mediaQuery, ")");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIntcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tfaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiKFwiLmNvbmNhdChpdGVtWzJdLCBcIikgYW5kIChcIikuY29uY2F0KG1lZGlhUXVlcnksIFwiKVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290KS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./public/css/style.css\nvar style = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/utils/event.js\nclass Event {\n  constructor(sender) {\n    this._sender = sender;\n    this._listeners = [];\n  }\n\n  attach(callback = null) {\n    if (callback == null) return;\n\n    this._listeners.push(callback);\n  }\n\n  notify(args) {\n    this._listeners.map(item => {\n      item(this._sender, args);\n    });\n  }\n\n}\n// CONCATENATED MODULE: ./src/game/model.js\n\n\nclass model_GameModel {\n  constructor() {\n    this.stage = "";\n    this.changeStage = new Event(this);\n  }\n\n  getStage() {\n    return this.stage;\n  }\n\n  setStage(stage) {\n    this.stage = stage;\n    this.changeStage.notify({\n      stage\n    });\n  }\n\n}\n\n/* harmony default export */ var model = (new model_GameModel());\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/utils/tween.js\nvar Tween = {\n  Linear: function Linear(t, b, c, d) {\n    return c * t / d + b;\n  },\n  Quad: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n  },\n  Cubic: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n  },\n  Quart: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n  },\n  Quint: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n  },\n  Sine: {\n    easeIn: function easeIn(t, b, c, d) {\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n  },\n  Expo: {\n    easeIn: function easeIn(t, b, c, d) {\n      return t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return t == d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if (t == 0) return b;\n      if (t == d) return b + c;\n      if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n  },\n  Circ: {\n    easeIn: function easeIn(t, b, c, d) {\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n  },\n  Elastic: {\n    easeIn: function easeIn(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d) == 1) return b + c;\n      if (typeof p == "undefined") p = d * .3;\n\n      if (!a || a < Math.abs(c)) {\n        s = p / 4;\n        a = c;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    },\n    easeOut: function easeOut(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d) == 1) return b + c;\n      if (typeof p == "undefined") p = d * .3;\n\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d / 2) == 2) return b + c;\n      if (typeof p == "undefined") p = d * (.3 * 1.5);\n\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n    }\n  },\n  Back: {\n    easeIn: function easeIn(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    easeOut: function easeOut(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n  },\n  Bounce: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c - Tween.Bounce.easeOut(d - t, 0, c, d) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n      }\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if (t < d / 2) {\n        return Tween.Bounce.easeIn(t * 2, 0, c, d) * .5 + b;\n      } else {\n        return Tween.Bounce.easeOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n      }\n    }\n  }\n};\n/* harmony default export */ var utils_tween = (Tween);\n// CONCATENATED MODULE: ./src/utils/animation.js\n\nvar animationId = -1;\nvar killAnimationId = animationId - 1;\nvar _customAnimation = {};\n\n_customAnimation.to = function (obj, duration, options) {\n  duration *= 1000;\n  var delay = options.delay || 0;\n\n  for (var name in options) {\n    if (name === \'delay\') {\n      delay = options[name];\n    } else if (name === \'onComplete\') {} else if (name === \'ease\') {} else {\n      setTimeout(function (name) {\n        return function () {\n          animation_TweenAnimation(obj[name], options[name], duration, options.ease || \'Linear\', function (value, complete) {\n            obj[name] = value;\n\n            if (complete) {\n              options.onComplete && options.onComplete();\n            }\n          });\n        };\n      }(name), delay * 1000);\n    }\n  }\n}; // 对运动方法进行封装\n\n\nvar _TweenAnimation = function TweenAnimation(from, to, duration, easing, callback) {\n  var selfAnimationId = ++animationId;\n\n  var isUndefined = function isUndefined(obj) {\n    return typeof obj == \'undefined\';\n  };\n\n  var isFunction = function isFunction(obj) {\n    return typeof obj == \'function\';\n  };\n\n  var isNumber = function isNumber(obj) {\n    return typeof obj == \'number\';\n  };\n\n  var isString = function isString(obj) {\n    return typeof obj == \'string\';\n  }; // 转换成毫秒\n\n\n  var toMillisecond = function toMillisecond(obj) {\n    if (isNumber(obj)) {\n      return obj;\n    } else if (isString(obj)) {\n      if (/\\d+m?s$/.test(obj)) {\n        if (/ms/.test(obj)) {\n          return 1 * obj.replace(\'ms\', \'\');\n        }\n\n        return 1000 * obj.replace(\'s\', \'\');\n      } else if (/^\\d+$/.test(obj)) {\n        return +obj;\n      }\n    }\n\n    return -1;\n  };\n\n  if (!isNumber(from) || !isNumber(to)) {\n    if (window.console) {\n      console.error(\'from和to两个参数必须且为数值\');\n    }\n\n    return 0;\n  } // 缓动算法\n\n\n  var tween = utils_tween;\n\n  if (!tween) {\n    if (window.console) {\n      console.error(\'缓动算法函数缺失\');\n    }\n\n    return 0;\n  } // duration, easing, callback均为可选参数\n  // 而且顺序可以任意\n\n\n  var options = {\n    duration: 300,\n    easing: \'Linear\',\n    callback: function callback() {}\n  };\n\n  var setOptions = function setOptions(obj) {\n    if (isFunction(obj)) {\n      options.callback = obj;\n    } else if (toMillisecond(obj) != -1) {\n      options.duration = toMillisecond(obj);\n    } else if (isString(obj)) {\n      options.easing = obj;\n    }\n  };\n\n  setOptions(duration);\n  setOptions(easing);\n  setOptions(callback); // requestAnimationFrame的兼容处理\n\n  if (!window.requestAnimationFrame) {\n    requestAnimationFrame = function requestAnimationFrame(fn) {\n      setTimeout(fn, 16.7);\n    };\n  } // 算法需要的几个变量\n\n\n  var start = -1; // during根据设置的总时间计算\n\n  var during = Math.ceil(options.duration / 16.7); // 当前动画算法\n  // 确保首字母大写\n\n  options.easing = options.easing.slice(0, 1).toUpperCase() + options.easing.slice(1);\n  var arrKeyTween = options.easing.split(\'.\');\n  var fnGetValue;\n\n  if (arrKeyTween.length == 1) {\n    fnGetValue = tween[arrKeyTween[0]];\n  } else if (arrKeyTween.length == 2) {\n    fnGetValue = tween[arrKeyTween[0]] && tween[arrKeyTween[0]][arrKeyTween[1]];\n  }\n\n  if (isFunction(fnGetValue) == false) {\n    console.error(\'没有找到名为"\' + options.easing + \'"的动画算法\');\n    return;\n  }\n\n  var startTime = Date.now();\n  var lastTime = Date.now(); // 运动\n\n  var step = function step() {\n    var currentTime = Date.now();\n    var interval = currentTime - lastTime;\n\n    if (interval) {\n      var fps = Math.ceil(1000 / interval);\n    } else {\n      requestAnimationFrame(step);\n      return;\n    }\n\n    lastTime = currentTime;\n\n    if (interval > 100) {\n      requestAnimationFrame(step);\n      return;\n    }\n\n    if (fps >= 30) {\n      start++;\n    } else {\n      var _start = Math.floor((currentTime - startTime) / 16.7);\n\n      start = _start > start ? _start : start + 1;\n    } // 当前的运动位置\n\n\n    var value = fnGetValue(start, from, to - from, during); // 如果还没有运动到位，继续\n\n    if (start <= during && selfAnimationId > killAnimationId) {\n      options.callback(value);\n      requestAnimationFrame(step);\n    } else if (start > during && selfAnimationId > killAnimationId) {\n      // 动画结束，这里可以插入回调...\n      options.callback(to, true);\n    } else {}\n  }; // 开始执行动画\n\n\n  step();\n};\n\nvar _stopAllAnimation = () => {\n  killAnimationId = animationId;\n};\n\nconst customAnimation = _customAnimation;\nconst animation_TweenAnimation = _TweenAnimation;\nconst stopAllAnimation = _stopAllAnimation;\n// CONCATENATED MODULE: ./src/scene/camera.js\n\n\n\nclass camera_Camera {\n  constructor() {\n    this.instance = null;\n    this.frustumSize = 30;\n  }\n\n  init() {\n    const {\n      aspect\n    } = common["g" /* common */];\n    let frustumSize = this.frustumSize;\n    this.instance = new THREE.OrthographicCamera(-frustumSize, frustumSize, frustumSize * aspect, -frustumSize * aspect, -100, 85);\n    this.reset();\n    this.instance.lookAt(this.target);\n  }\n\n  reset() {\n    //-10,10,10\n    this.instance.position.set(-10, 10, 10);\n    this.target = new THREE.Vector3(0, 0, 0);\n  }\n\n  updatePosition(newTargetPosition) {\n    customAnimation.to(this.instance.position, 0.5, {\n      x: newTargetPosition.x - 10,\n      y: newTargetPosition.y + 10,\n      z: newTargetPosition.z + 10\n    });\n    customAnimation.to(this.target, 0.5, {\n      x: newTargetPosition.x,\n      y: newTargetPosition.y,\n      z: newTargetPosition.z\n    });\n  }\n\n}\n\n/* harmony default export */ var camera = (new camera_Camera());\n// CONCATENATED MODULE: ./src/scene/light.js\n\n\nclass light_Light {\n  constructor() {\n    this.instances = {};\n  }\n\n  init() {\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    const shadowLight = new THREE.DirectionalLight(0xffffff, 0.3);\n    this.shadowLight = shadowLight; // const shadowLightHelper = new THREE.DirectionalLightHelper(shadowLight,5);\n    // this.instances.shadowLightHelper = shadowLightHelper;\n\n    shadowLight.position.set(10, 30, 20);\n    shadowLight.castShadow = true;\n    var basicMaterial = new THREE.MeshBasicMaterial({\n      color: 0xF5F5F5\n    });\n    this.shadowTarget = new THREE.Mesh(new THREE.PlaneGeometry(0.1, 0.1), basicMaterial);\n    this.shadowTarget.visible = false;\n    this.shadowTarget.name = \'shadowTarget\';\n    shadowLight.target = this.shadowTarget;\n    shadowLight.shadow.camera.near = 0.5;\n    shadowLight.shadow.camera.far = 500;\n    shadowLight.shadow.camera.left = -100;\n    shadowLight.shadow.camera.right = 100;\n    shadowLight.shadow.camera.top = 100;\n    shadowLight.shadow.camera.bottom = -100;\n    shadowLight.shadow.mapSize.width = 1024;\n    shadowLight.shadow.mapSize.height = 1024;\n    this.instances.shadowLight = shadowLight;\n    this.instances.ambientLight = ambientLight;\n    this.instances.shadowTarget = this.shadowTarget;\n  }\n\n  updatePosition(targetPosition) {\n    customAnimation.to(this.shadowTarget.position, 0.5, {\n      x: targetPosition.x,\n      y: targetPosition.y,\n      z: targetPosition.z\n    });\n    customAnimation.to(this.shadowLight.position, 0.5, {\n      x: 10 + targetPosition.x,\n      y: 30 + targetPosition.y,\n      z: 20 + targetPosition.z\n    });\n  }\n\n  reset() {\n    this.shadowLight.position.set(10, 30, 20);\n    this.shadowTarget.position.set(0, 0, 0);\n  }\n\n}\n\n/* harmony default export */ var light = (new light_Light());\n// CONCATENATED MODULE: ./src/part/background.js\n\n\n\nclass background_Background {\n  constructor() {\n    this.instance = null;\n    this.frustumSize = camera.frustumSize;\n  }\n\n  init() {\n    const {\n      width,\n      height\n    } = common["g" /* common */];\n    const geometry = new THREE.PlaneGeometry(this.frustumSize * 2, this.frustumSize * 2 * height / width);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xf5f5f5,\n      opacity: 1,\n      transparent: true\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    this.instance = mesh;\n  }\n\n}\n\n/* harmony default export */ var background = (new background_Background());\n// CONCATENATED MODULE: ./src/scene/index.js\n\n\n\n\n\nclass scene_Scene {\n  constructor() {\n    this.instance = null;\n  }\n\n  init() {\n    const {\n      width,\n      height,\n      canvas\n    } = common["g" /* common */];\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true,\n      preserveDrawingBuffer: true\n    });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFShadowMap; // this.renderer.setClearColor(new THREE.Color(0xffffff));\n\n    this.renderer.setSize(width, height);\n    this.instance = new THREE.Scene();\n    this.camera = camera;\n    this.camera.init();\n    this.light = light;\n    this.light.init(); // this.axesHelper = new THREE.AxesHelper(100);\n    // this.instance.add(this.axesHelper);\n\n    this.instance.add(this.camera.instance);\n\n    for (const key in this.light.instances) {\n      if (this.light.instances.hasOwnProperty(key)) {\n        this.instance.add(this.light.instances[key]);\n      }\n    }\n\n    this.background = background;\n    this.background.init();\n    this.background.instance.position.z = -84;\n    this.camera.instance.add(this.background.instance);\n  }\n\n  render() {\n    this.renderer.render(this.instance, this.camera.instance);\n  }\n\n  updateCameraPosition(targetPosition) {\n    this.camera.updatePosition(targetPosition);\n    this.light.updatePosition(targetPosition);\n  }\n\n  reset() {\n    this.camera.reset();\n    this.light.reset();\n  }\n\n  addScore(scoreInstance) {\n    this.currentScore = scoreInstance;\n    this.camera.instance.add(scoreInstance);\n    scoreInstance.position.x = -24;\n    scoreInstance.position.y = 40;\n  }\n\n  updateScore(scoreInstance) {\n    this.camera.instance.remove(this.currentScore);\n    this.currentScore = scoreInstance;\n    this.camera.instance.add(scoreInstance);\n    scoreInstance.position.x = -24;\n    scoreInstance.position.y = 40;\n  }\n\n}\n\n/* harmony default export */ var src_scene = (new scene_Scene());\n// CONCATENATED MODULE: ./src/block/base.js\n\n\nclass base_BaseBlock {\n  constructor(type) {\n    this.type = type;\n    this.width = common["a" /* BLOCKCONFIG */].width;\n    this.height = common["a" /* BLOCKCONFIG */].height;\n    this.status = common["f" /* STATUS */].STOP;\n    this.scale = 1;\n  }\n\n  popup() {\n    this.instance.position.set(this.x, this.y + 30, this.z);\n    customAnimation.to(this.instance.position, 0.5, {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      ease: \'Bounce.easeOut\'\n    });\n  }\n\n  _shrink() {\n    const DELTA_SCALE = 0.005;\n    const MIN_SCALE = 0.55;\n    this.scale -= DELTA_SCALE;\n    this.scale = Math.max(MIN_SCALE, this.scale);\n\n    if (this.scale <= MIN_SCALE) {\n      this.status = common["f" /* STATUS */].STOP;\n      return;\n    }\n\n    this.instance.scale.y = this.scale;\n    const deltaY = this.height * DELTA_SCALE / 2;\n    this.instance.position.y -= deltaY;\n  }\n\n  rebound() {\n    this.status = common["f" /* STATUS */].STOP;\n    this.scale = 1;\n    customAnimation.to(this.instance.scale, 0.5, {\n      ease: \'Elastic.easeOut\',\n      y: 1\n    });\n    customAnimation.to(this.instance.position, 0.5, {\n      ease: \'Elastic.easeOut\',\n      y: 0\n    });\n  }\n\n  shrink() {\n    this.status = common["f" /* STATUS */].SKRINK;\n  }\n\n  update() {\n    if (this.status === common["f" /* STATUS */].SKRINK) {\n      this._shrink();\n    }\n  }\n\n  getVertices() {\n    const vertices = [];\n    const centerPosition = {\n      x: this.instance.position.x,\n      z: this.instance.position.z\n    };\n    vertices.push([centerPosition.x + this.width / 2, centerPosition.z + this.width / 2]);\n    vertices.push([centerPosition.x + this.width / 2, centerPosition.z - this.width / 2]);\n    vertices.push([centerPosition.x - this.width / 2, centerPosition.z + this.width / 2]);\n    vertices.push([centerPosition.x - this.width / 2, centerPosition.z - this.width / 2]);\n    return vertices;\n  }\n\n}\n// CONCATENATED MODULE: ./src/block/cuboid.js\n\n // import img_stool from \'@images/stool.png\'\n\nclass cuboid_CuboidBlock extends base_BaseBlock {\n  constructor(x = 0, y = 0, z = 0, type, size) {\n    super(common["b" /* BLOCKTYPE */].CUBOID);\n    this.name = "block";\n    this.instance = null;\n    this.size = size || this.width; // const geometry = new THREE.BoxGeometry(this.size, this.height, this.size);\n    // this.texture = new THREE.TextureLoader().load(img_stool);\n\n    const main_material = new THREE.MeshPhongMaterial({\n      color: ~~common["d" /* COLOR */][~~(common["d" /* COLOR */].length * Math.random())]\n    });\n    const while_material = new THREE.MeshPhongMaterial({\n      color: 0xf5f5f5\n    });\n    const while_box_height = 2.2;\n    const main_box_height = (this.height - while_box_height) / 2;\n    const main_geometry = new THREE.BoxGeometry(this.size, main_box_height, this.size);\n    const while_geometry = new THREE.BoxGeometry(this.size, while_box_height, this.size);\n    const total_mesh = new THREE.Object3D();\n    const top_mesh = new THREE.Mesh(main_geometry, main_material);\n    const middle_mesh = new THREE.Mesh(while_geometry, while_material);\n    const bottom_mesh = new THREE.Mesh(main_geometry, main_material);\n    top_mesh.position.y = (while_box_height + main_box_height) / 2;\n    middle_mesh.position.y = 0;\n    bottom_mesh.position.y = -top_mesh.position.y;\n    top_mesh.castShadow = middle_mesh.castShadow = bottom_mesh.castShadow = true;\n    top_mesh.receiveShadow = middle_mesh.receiveShadow = bottom_mesh.receiveShadow = true;\n    total_mesh.add(top_mesh, middle_mesh, bottom_mesh);\n    this.instance = total_mesh;\n    this.instance.receiveShadow = true;\n    this.instance.castShadow = true;\n    this.instance.name = this.name;\n    this.x = this.instance.position.x = x;\n    this.y = this.instance.position.y = y;\n    this.z = this.instance.position.z = z;\n\n    if (type === \'popup\') {\n      this.popup();\n    } else if (type === \'show\') {\n      this.instance.position.x = this.x;\n      this.instance.position.y = this.y;\n      this.instance.position.z = this.z;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/block/cylinder.js\n\n // import img_stool from \'@images/stool.png\'\n\nclass cylinder_CylinderBlock extends base_BaseBlock {\n  constructor(x = 0, y = 0, z = 0, type, size) {\n    super(common["b" /* BLOCKTYPE */].CYLINDER);\n    this.name = "block";\n    this.instance = null;\n    this.size = size || this.width; // const geometry = new THREE.CylinderGeometry(this.size / 2, this.size / 2, this.height, 100);\n    // this.texture = new THREE.TextureLoader().load(img_stool);\n    // const material = new THREE.MeshPhongMaterial({ color: ~~COLOR[~~(COLOR.length*Math.random())] });\n\n    const main_material = new THREE.MeshPhongMaterial({\n      color: ~~common["d" /* COLOR */][~~(common["d" /* COLOR */].length * Math.random())]\n    });\n    const while_material = new THREE.MeshPhongMaterial({\n      color: 0xf5f5f5\n    });\n    const while_box_height = 2.2;\n    const main_box_height = (this.height - while_box_height) / 2;\n    const main_geometry = new THREE.CylinderGeometry(this.size / 2, this.size / 2, main_box_height, 100);\n    const while_geometry = new THREE.CylinderGeometry(this.size / 2, this.size / 2, while_box_height, 100);\n    const total_mesh = new THREE.Object3D();\n    const top_mesh = new THREE.Mesh(main_geometry, main_material);\n    const middle_mesh = new THREE.Mesh(while_geometry, while_material);\n    const bottom_mesh = new THREE.Mesh(main_geometry, main_material);\n    top_mesh.position.y = (while_box_height + main_box_height) / 2;\n    middle_mesh.position.y = 0;\n    bottom_mesh.position.y = -top_mesh.position.y;\n    top_mesh.castShadow = middle_mesh.castShadow = bottom_mesh.castShadow = true;\n    top_mesh.receiveShadow = middle_mesh.receiveShadow = bottom_mesh.receiveShadow = true;\n    total_mesh.add(top_mesh, middle_mesh, bottom_mesh);\n    this.instance = total_mesh;\n    this.instance.receiveShadow = true;\n    this.instance.castShadow = true;\n    this.instance.name = this.name;\n    this.x = this.instance.position.x = x;\n    this.y = this.instance.position.y = y;\n    this.z = this.instance.position.z = z;\n\n    if (type === \'popup\') {\n      this.popup();\n    } else if (type === \'show\') {\n      this.instance.position.x = this.x;\n      this.instance.position.y = this.y;\n      this.instance.position.z = this.z;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/part/ground.js\nclass Ground {\n  constructor() {\n    this.instance = null;\n  }\n\n  init() {\n    const geometry = new THREE.PlaneGeometry(200, 200);\n    const material = new THREE.ShadowMaterial({\n      transparent: true,\n      color: 0x000000,\n      opacity: 0.2\n    });\n    this.instance = new THREE.Mesh(geometry, material);\n    this.instance.rotation.x = -Math.PI / 2;\n    this.instance.position.y = -6;\n    this.instance.receiveShadow = true;\n  }\n\n  reset() {\n    this.instance.rotation.x = -Math.PI / 2;\n    this.instance.position.y = -6;\n    this.instance.position.x = 0;\n    this.instance.position.z = 0;\n  }\n\n  updatePosition(targetPosition) {\n    this.instance.position.x = targetPosition.x;\n    this.instance.position.z = targetPosition.z;\n  }\n\n}\n\n/* harmony default export */ var ground = (new Ground());\n// CONCATENATED MODULE: ./public/images/head.png\n/* harmony default export */ var head = (__webpack_require__.p + "images/head.1facdcc1.png");\n// CONCATENATED MODULE: ./public/images/bottom.png\n/* harmony default export */ var bottom = (__webpack_require__.p + "images/bottom.3835d18c.png");\n// CONCATENATED MODULE: ./public/images/top.png\n/* harmony default export */ var images_top = (__webpack_require__.p + "images/top.110c5048.png");\n// CONCATENATED MODULE: ./src/part/bottle.js\n\n\n\n\n\n\n\nclass bottle_Bottle {\n  constructor() {\n    const {\n      x,\n      y,\n      z\n    } = common["c" /* BOTTLECONFIG */];\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.instance = null;\n    this.name = "bottle";\n    this.radius = 1.78;\n    this.depth = 10.24;\n    this.width = this.radius * 2;\n    this.blockHeight = common["a" /* BLOCKCONFIG */].height;\n    this.gravity = common["g" /* common */].gravity;\n    this.flyingTime = 0;\n    this.direction = 0;\n    this.axis = null;\n    this.status = \'\';\n    this.reset();\n  }\n\n  init() {\n    this.instance = new THREE.Object3D();\n    this.hero = new THREE.Object3D();\n    this.instance.name = this.name;\n    this.instance.position.set(this.x, this.y + 30, this.z);\n    this.instance.castShadow = true;\n    this.instance.receiveShadow = true;\n    this.head = this.createHead();\n    this.head.position.y = 10.24;\n    this.head.receiveShadow = true;\n    this.head.castShadow = true;\n    this.body = new THREE.Object3D();\n    const bottom = this.createBottom();\n    bottom.receiveShadow = true;\n    bottom.castShadow = true;\n    const middle = this.createMiddle();\n    middle.receiveShadow = true;\n    middle.castShadow = true;\n    middle.position.y = 3.06;\n    const top = this.createTop();\n    top.receiveShadow = true;\n    top.castShadow = true;\n    top.position.y = 3.86;\n    this.body.add(top);\n    this.body.add(middle);\n    this.body.add(bottom);\n    this.body.position.y = 1.8;\n    this.hero.add(this.head);\n    this.hero.add(this.body);\n    this.instance.add(this.hero);\n  }\n\n  createHead() {\n    const geometry = new THREE.IcosahedronGeometry(this.radius, 3);\n    const texture = new THREE.TextureLoader().load(head);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createBottom() {\n    const geometry = new THREE.CylinderGeometry(this.radius * 0.78, this.radius * 1.17, this.radius * 2.1, 20);\n    const texture = new THREE.TextureLoader().load(bottom);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createMiddle() {\n    const geometry = new THREE.CylinderGeometry(this.radius * 0.955, this.radius * 0.78, this.radius * 1.41, 20);\n    const texture = new THREE.TextureLoader().load(bottom);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createTop() {\n    const geometry = new THREE.SphereGeometry(this.radius, 32, 32, 0, 6.4, 0, 1.3);\n    const texture = new THREE.TextureLoader().load(images_top);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  show() {\n    return new Promise((resolve, reject) => {\n      customAnimation.to(this.instance.position, 1, {\n        x: common["c" /* BOTTLECONFIG */].x,\n        y: common["c" /* BOTTLECONFIG */].y + this.blockHeight / 2,\n        z: common["c" /* BOTTLECONFIG */].z,\n        ease: \'Bounce.easeOut\',\n        onComplete: () => resolve()\n      });\n    });\n  }\n\n  setDirection(direction, axis) {\n    this.direction = direction;\n    this.axis = axis;\n  }\n\n  rotate() {\n    const scale = 1.35;\n    this.hero.rotation.z = this.hero.rotation.x = 0;\n\n    if (this.direction == 0) {\n      // x\n      customAnimation.to(this.hero.rotation, 0.14, {\n        z: this.hero.rotation.z - Math.PI\n      });\n      customAnimation.to(this.hero.rotation, 0.18, {\n        z: this.hero.rotation.z - 2 * Math.PI,\n        delay: 0.14\n      });\n      customAnimation.to(this.head.position, 0.1, {\n        y: this.head.position.y + 0.9 * scale,\n        x: this.head.position.x + 0.45 * scale\n      });\n      customAnimation.to(this.head.position, 0.1, {\n        y: this.head.position.y - 0.9 * scale,\n        x: this.head.position.x - 0.45 * scale,\n        delay: 0.1\n      });\n      customAnimation.to(this.head.position, 0.15, {\n        y: 10.24,\n        x: 0,\n        delay: 0.25\n      });\n      customAnimation.to(this.body.scale, 0.1, {\n        y: Math.max(scale, 1),\n        x: Math.max(Math.min(1 / scale, 1), 0.7),\n        z: Math.max(Math.min(1 / scale, 1), 0.7)\n      });\n      customAnimation.to(this.body.scale, 0.1, {\n        y: Math.min(0.9 / scale, 0.7),\n        x: Math.max(scale, 1.2),\n        z: Math.max(scale, 1.2),\n        delay: 0.1\n      });\n      customAnimation.to(this.body.scale, 0.3, {\n        y: 1,\n        x: 1,\n        z: 1,\n        delay: 0.2\n      });\n    } else if (this.direction == 1) {\n      // z\n      customAnimation.to(this.hero.rotation, 0.14, {\n        x: this.hero.rotation.x - Math.PI\n      });\n      customAnimation.to(this.hero.rotation, 0.18, {\n        x: this.hero.rotation.x - 2 * Math.PI,\n        delay: 0.14\n      });\n      customAnimation.to(this.head.position, 0.1, {\n        y: this.head.position.y + 0.9 * scale,\n        z: this.head.position.z - 0.45 * scale\n      });\n      customAnimation.to(this.head.position, 0.1, {\n        z: this.head.position.z + 0.45 * scale,\n        y: this.head.position.y - 0.9 * scale,\n        delay: 0.1\n      });\n      customAnimation.to(this.head.position, 0.15, {\n        y: 10.24,\n        z: 0,\n        delay: 0.25\n      });\n      customAnimation.to(this.body.scale, 0.05, {\n        y: Math.max(scale, 1),\n        x: Math.max(Math.min(1 / scale, 1), 0.7),\n        z: Math.max(Math.min(1 / scale, 1), 0.7)\n      });\n      customAnimation.to(this.body.scale, 0.05, {\n        y: Math.min(0.9 / scale, 0.7),\n        x: Math.max(scale, 1.2),\n        z: Math.max(scale, 1.2),\n        delay: 0.1\n      });\n      customAnimation.to(this.body.scale, 0.2, {\n        y: 1,\n        x: 1,\n        z: 1,\n        delay: 0.2\n      });\n    }\n  }\n\n  reset() {\n    this.stop();\n    this.instance && this.instance.position.set(this.x, this.y + 30, this.z);\n    this.instance && this.instance.rotation.set(0, 0, 0);\n  }\n\n  shrink() {\n    this.status = common["f" /* STATUS */].SKRINK;\n  }\n\n  jump() {\n    this.status = common["f" /* STATUS */].JUMP;\n  }\n\n  stop() {\n    this.status = common["f" /* STATUS */].STOP;\n    this.velocity = {\n      vx: 0,\n      vy: 0\n    };\n    this.flyingTime = 0;\n    this.scale = 1;\n\n    if (this.instance) {\n      this.body.scale.x = this.scale;\n      this.body.scale.y = this.scale;\n      this.body.scale.z = this.scale;\n      this.head.position.y = 10.24;\n      this.hero.position.y = 0;\n    }\n  }\n\n  _shrink() {\n    const DELTA_SCALE = 0.005;\n    const HORIZON_DELTA_SCALE = 0.002;\n    const HEAD_DELTA = 0.03;\n    const MIN_SCALE = 0.55;\n    this.scale -= DELTA_SCALE;\n    this.scale = Math.max(MIN_SCALE, this.scale);\n\n    if (this.scale <= MIN_SCALE) {\n      return;\n    }\n\n    this.body.scale.y = this.scale;\n    this.body.scale.x += HORIZON_DELTA_SCALE;\n    this.body.scale.z += HORIZON_DELTA_SCALE;\n    this.head.position.y -= HEAD_DELTA;\n    const bottleDeltaY = HEAD_DELTA / 2;\n    const deltaY = this.blockHeight * DELTA_SCALE / 2;\n    this.hero.position.y -= bottleDeltaY + deltaY * 2;\n  }\n\n  _jump(tickTime) {\n    const t = tickTime / 1000;\n    this.flyingTime = this.flyingTime + t;\n    const translateH = this.velocity.vx * t;\n    const translateY = this.velocity.vy * t - 0.5 * this.gravity * t * t - this.gravity * this.flyingTime * t;\n    this.instance.translateY(translateY);\n    this.instance.translateOnAxis(this.axis, translateH);\n  }\n\n  forerake() {\n    this.status = common["f" /* STATUS */].FORERAKE;\n    this.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n    setTimeout(() => {\n      if (this.direction === 0) {\n        customAnimation.to(this.instance.rotation, .5, {\n          z: -Math.PI / 2\n        });\n      }\n\n      if (this.direction === 1) {\n        customAnimation.to(this.instance.rotation, .5, {\n          x: -Math.PI / 2\n        });\n      }\n\n      setTimeout(() => {\n        customAnimation.to(this.instance.position, 0.2, {\n          y: -common["a" /* BLOCKCONFIG */].height / 2 + 2\n        });\n      }, 350);\n    }, 200);\n  }\n\n  hypsokinesis() {\n    this.status = common["f" /* STATUS */].HYPSOKINESIS;\n    this.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n    setTimeout(() => {\n      if (this.direction === 0) {\n        customAnimation.to(this.instance.rotation, .5, {\n          z: Math.PI / 2\n        });\n      }\n\n      if (this.direction === 1) {\n        customAnimation.to(this.instance.rotation, .5, {\n          x: Math.PI / 2\n        });\n      }\n\n      setTimeout(() => {\n        customAnimation.to(this.instance.position, 0.2, {\n          y: -common["a" /* BLOCKCONFIG */].height / 2 + 2\n        });\n      }, 150);\n    }, 200);\n  }\n\n  fall() {\n    this.status = common["f" /* STATUS */].FALL;\n    console.log(\'fall\');\n    customAnimation.to(this.instance.position, 0.2, {\n      y: -common["a" /* BLOCKCONFIG */].height / 2\n    });\n  }\n\n  update() {\n    if (this.status === common["f" /* STATUS */].SKRINK) {\n      this._shrink();\n    } else if (this.status === common["f" /* STATUS */].JUMP) {\n      const tickTime = Date.now() - this.lastFrameTime;\n\n      this._jump(tickTime);\n    }\n\n    this.lastFrameTime = Date.now();\n  }\n\n}\n\n/* harmony default export */ var part_bottle = (new bottle_Bottle());\n// CONCATENATED MODULE: ./src/utils/index.js\n/* harmony default export */ var utils = ({\n  pointInPolygon(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n    const xMin = vs[0][0] > vs[2][0] ? vs[2][0] : vs[0][0];\n    const xMax = vs[0][0] < vs[2][0] ? vs[2][0] : vs[0][0];\n    const yMin = vs[0][1] > vs[1][1] ? vs[1][1] : vs[0][1];\n    const yMax = vs[0][1] < vs[1][1] ? vs[1][1] : vs[0][1];\n\n    if (x > xMin && x < xMax && y > yMin && y < yMax) {\n      inside = true;\n    }\n\n    return inside;\n  },\n\n  merge(totalGeometry, geometry, index, positions) {\n    for (var i = 0, len = geometry.faces.length; i < len; ++i) {\n      geometry.faces[i].materialIndex = 0;\n    }\n\n    var mesh = new THREE.Mesh(geometry);\n\n    for (var i = 0, len = positions.length; i < len; ++i) {\n      mesh.position.set(positions[i].x, positions[i].y, positions[i].z);\n      mesh.updateMatrix();\n      totalGeometry.merge(mesh.geometry, mesh.matrix, index);\n    }\n  },\n\n  mapUv(textureWidth, textureHeight, geometry, faceIdx, x1, y1, x2, y2, flag) {\n    var tileUvW = 1 / textureWidth;\n    var tileUvH = 1 / textureHeight;\n\n    if (geometry.faces[faceIdx] instanceof THREE.Face3) {\n      var UVs = geometry.faceVertexUvs[0][faceIdx * 2];\n\n      if (faceIdx == 4 && !flag) {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n        UVs[2].x = x1 * tileUvW;\n        UVs[2].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y1 * tileUvH;\n      } else {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n        UVs[1].x = x1 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[2].x = x2 * tileUvW;\n        UVs[2].y = y1 * tileUvH;\n      }\n\n      var UVs = geometry.faceVertexUvs[0][faceIdx * 2 + 1];\n\n      if (faceIdx == 4 && !flag) {\n        UVs[2].x = x1 * tileUvW;\n        UVs[2].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[0].x = x2 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n      } else {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[2].x = x2 * tileUvW;\n        UVs[2].y = y1 * tileUvH;\n      }\n    }\n  }\n\n});\n// CONCATENATED MODULE: ./src/part/font.js\nconst font = {\n  "glyphs": {\n    "0": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 696,\n      "o": "m 0 868 l 696 868 l 696 693 l 0 693 l 0 868 m 696 0 l 0 0 l 0 175 l 696 175 l 696 0 m 0 694 l 175 694 l 175 174 l 0 174 l 0 694 m 521 694 l 696 694 l 696 174 l 521 174 l 521 694 z "\n    },\n    "1": {\n      "ha": 521,\n      "x_min": 0,\n      "x_max": 347,\n      "o": "m 174 0 l 347 0 l 347 868 l 0 868 l 0 694 l 174 694 l 174 0 z "\n    },\n    "2": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 0 868 l 0 694 l 521 694 l 521 521 l 0 521 l 0 0 l 694 0 l 694 174 l 174 174 l 174 347 l 694 347 l 694 868 l 0 868 z "\n    },\n    "3": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 694 0 l 694 868 l 0 868 l 0 694 l 521 694 l 521 521 l 0 521 l 0 347 l 521 347 l 521 174 l 0 174 l 0 0 l 694 0 z "\n    },\n    "4": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 521 347 l 174 347 l 174 868 l 0 868 l 0 174 l 521 174 l 521 0 l 694 0 l 694 868 l 521 868 l 521 347 z "\n    },\n    "5": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 694 694 l 694 868 l 0 868 l 0 347 l 521 347 l 521 174 l 0 174 l 0 0 l 694 0 l 694 521 l 174 521 l 174 694 l 694 694 z "\n    },\n    "6": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 0 869 l 175 869 l 175 0 l 0 0 l 0 869 m 174 519 l 694 519 l 694 346 l 174 346 l 174 519 m 174 869 l 519 869 l 519 694 l 174 694 l 174 869 m 174 174 l 694 174 l 694 0 l 174 0 l 174 174 m 521 347 l 694 347 l 694 174 l 521 174 l 521 347 z "\n    },\n    "7": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 0 868 l 0 694 l 521 694 l 521 521 l 694 521 l 694 868 l 0 868 m 347 347 l 521 347 l 521 521 l 347 521 l 347 347 m 174 0 l 347 0 l 347 347 l 174 347 l 174 0 z "\n    },\n    "8": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 694,\n      "o": "m 0 868 l 174 868 l 174 0 l 0 0 l 0 868 m 521 868 l 694 868 l 694 0 l 521 0 l 521 868 m 174 174 l 521 174 l 521 0 l 174 0 l 174 174 m 174 868 l 521 868 l 521 693 l 174 693 l 174 868 m 174 521 l 521 521 l 521 346 l 174 346 l 174 521 z "\n    },\n    "9": {\n      "ha": 868,\n      "x_min": 0,\n      "x_max": 696,\n      "o": "m 0 521 l 696 521 l 696 346 l 0 346 l 0 521 m 0 868 l 694 868 l 694 694 l 0 694 l 0 868 m 0 696 l 175 696 l 175 519 l 0 519 l 0 696 m 521 696 l 694 696 l 694 521 l 521 521 l 521 696 m 521 349 l 696 349 l 696 -1 l 521 -1 l 521 349 m 174 174 l 521 174 l 521 -1 l 174 -1 l 174 174 z "\n    },\n    "+": {\n      "ha": 694,\n      "x_min": 0,\n      "x_max": 521,\n      "o": "m 174 174 l 347 174 l 347 347 l 521 347 l 521 521 l 347 521 l 347 694 l 174 694 l 174 521 l 0 521 l 0 347 l 174 347 l 174 174 z "\n    },\n    "了": {\n      "ha": 1389,\n      "x_min": 72,\n      "x_max": 1278,\n      "o": "m 659 954 q 1092 1246 891 1096 l 72 1246 l 72 1358 l 1278 1358 l 1278 1225 q 781 899 1035 1058 l 781 400 q 730 216 781 266 q 544 159 680 161 q 323 164 469 159 q 301 293 315 231 q 534 277 437 278 q 659 400 659 275 l 659 954 z "\n    },\n    "住": {\n      "ha": 1389,\n      "x_min": 18,\n      "x_max": 1364,\n      "o": "m 423 279 l 841 279 l 841 694 l 502 694 l 502 793 l 841 793 l 841 1122 l 464 1122 l 464 1221 l 1324 1221 l 1324 1122 l 949 1122 l 949 793 l 1286 793 l 1286 694 l 949 694 l 949 279 l 1364 279 l 1364 180 l 423 180 l 423 279 m 18 788 q 346 1462 235 1084 l 457 1430 q 339 1135 401 1274 l 339 129 l 233 129 l 233 926 q 64 670 152 783 q 18 788 45 730 m 773 1407 l 860 1462 q 996 1287 935 1373 l 897 1225 q 773 1407 837 1325 z "\n    },\n    "力": {\n      "ha": 1389,\n      "x_min": 30,\n      "x_max": 1265,\n      "o": "m 87 1154 l 526 1154 q 532 1458 530 1303 l 650 1458 q 643 1154 647 1314 l 1265 1154 q 1234 406 1249 625 q 985 170 1217 172 q 716 175 873 170 q 696 302 711 228 l 700 302 q 974 288 876 286 q 1119 433 1105 290 q 1143 1044 1135 677 l 640 1044 q 528 513 628 690 q 110 132 420 315 q 30 235 72 180 q 415 567 323 399 q 522 1044 510 720 l 87 1044 l 87 1154 z "\n    },\n    "太": {\n      "ha": 1389,\n      "x_min": 19,\n      "x_max": 1367,\n      "o": "m 19 229 q 616 1019 548 514 l 43 1019 l 43 1123 l 624 1123 q 629 1453 629 1260 l 747 1453 q 743 1123 747 1280 l 1344 1123 l 1344 1019 l 749 1019 q 1367 262 891 467 q 1270 155 1303 199 q 694 878 831 401 q 102 129 581 411 q 19 229 75 164 m 540 408 l 625 476 q 817 267 723 372 l 720 190 q 540 408 636 297 z "\n    },\n    "好": {\n      "ha": 1389,\n      "x_min": 24,\n      "x_max": 1370,\n      "o": "m 591 376 l 511 290 q 358 430 434 362 q 90 145 258 275 q 27 232 61 187 q 283 496 189 349 q 79 671 176 590 q 168 1073 127 842 l 24 1073 l 24 1173 l 184 1173 q 227 1459 206 1309 l 336 1444 q 290 1173 312 1295 l 547 1173 l 547 1086 q 414 521 515 718 q 591 376 503 449 m 545 849 l 918 849 l 918 1061 q 1165 1268 1053 1175 l 594 1268 l 594 1366 l 1314 1366 l 1314 1260 q 1025 1015 1168 1135 l 1025 849 l 1370 849 l 1370 751 l 1025 751 l 1025 316 q 850 152 1025 152 q 673 156 793 152 q 655 263 666 206 q 836 251 777 252 q 918 332 918 251 l 918 751 l 545 751 l 545 849 m 442 1073 l 271 1073 q 189 699 224 812 l 332 585 q 442 1073 423 774 z "\n    },\n    "很": {\n      "ha": 1389,\n      "x_min": 22,\n      "x_max": 1370,\n      "o": "m 552 1381 l 1248 1381 l 1248 716 l 1145 716 l 1145 750 l 886 750 q 1002 526 928 627 q 1248 688 1134 605 l 1313 604 q 1058 457 1188 528 q 1370 235 1183 323 q 1287 138 1331 191 q 785 750 902 370 l 655 750 l 655 297 q 899 408 753 336 q 921 308 909 351 q 658 175 825 267 q 579 117 617 151 l 507 210 q 552 316 552 254 l 552 1381 m 22 650 q 395 1111 245 842 l 488 1058 q 343 844 419 944 l 343 123 l 239 123 l 239 715 q 69 545 157 623 q 22 650 49 600 m 1145 1289 l 655 1289 l 655 1112 l 1145 1112 l 1145 1289 m 28 1070 q 376 1458 243 1234 l 469 1404 q 79 972 312 1164 q 28 1070 54 1024 m 655 841 l 1145 841 l 1145 1021 l 655 1021 l 655 841 z "\n    },\n    "快": {\n      "ha": 1389,\n      "x_min": 18,\n      "x_max": 1354,\n      "o": "m 407 779 l 768 779 q 783 1115 779 891 l 499 1115 l 499 1210 l 784 1210 q 784 1447 784 1317 l 891 1447 q 890 1210 891 1320 l 1221 1210 l 1221 779 l 1354 779 l 1354 684 l 914 684 q 1345 232 1025 374 q 1256 127 1312 199 q 840 623 948 302 q 442 117 758 317 q 363 208 397 175 q 754 684 688 399 l 407 684 l 407 779 m 209 1447 l 311 1447 l 311 1149 l 363 1184 q 515 994 452 1086 l 435 936 q 311 1108 376 1028 l 311 122 l 209 122 l 209 1447 m 1115 1115 l 888 1115 q 876 779 886 899 l 1115 779 l 1115 1115 m 77 1135 l 168 1122 q 109 776 148 959 q 18 798 71 785 q 77 1135 50 937 z "\n    },\n    "棒": {\n      "ha": 1389,\n      "x_min": 8,\n      "x_max": 1375,\n      "o": "m 487 423 l 837 423 l 837 557 l 605 557 l 605 636 q 456 517 538 574 q 385 595 434 545 q 654 841 556 701 l 449 841 l 449 926 l 705 926 q 749 1039 732 981 l 528 1039 l 528 1124 l 770 1124 q 789 1236 781 1177 l 488 1236 l 488 1321 l 798 1321 q 806 1457 803 1386 l 906 1457 q 898 1321 903 1386 l 1312 1321 l 1312 1236 l 888 1236 q 871 1124 882 1176 l 1275 1124 l 1275 1039 l 852 1039 q 814 926 838 982 l 1366 926 l 1366 841 l 1085 841 q 1375 621 1191 690 q 1313 530 1341 576 q 1161 632 1229 575 l 1161 557 l 936 557 l 936 423 l 1290 423 l 1290 338 l 936 338 l 936 122 l 837 122 l 837 338 l 487 338 l 487 423 m 8 609 q 206 1101 130 807 l 24 1101 l 24 1195 l 209 1195 l 209 1459 l 304 1459 l 304 1195 l 461 1195 l 461 1101 l 304 1101 l 304 869 l 353 909 q 472 769 419 834 l 401 711 q 304 840 359 772 l 304 123 l 209 123 l 209 886 q 52 490 141 642 q 8 609 34 549 m 837 760 l 936 760 l 936 643 l 1147 643 q 989 841 1050 730 l 770 841 q 612 643 709 736 l 837 643 l 837 760 z "\n    },\n    "稳": {\n      "ha": 1389,\n      "x_min": 7,\n      "x_max": 1386,\n      "o": "m 530 690 l 1183 690 l 1183 808 l 556 808 l 556 897 l 1183 897 l 1183 1013 l 559 1013 l 559 1099 l 540 1080 q 461 1146 506 1112 q 711 1469 614 1286 l 817 1449 q 749 1339 784 1393 l 1153 1339 l 1153 1252 q 1042 1104 1099 1179 l 1286 1104 l 1286 551 l 1183 551 l 1183 600 l 530 600 l 530 690 m 7 519 q 214 964 134 696 l 31 964 l 31 1058 l 222 1058 l 222 1275 q 58 1261 141 1268 q 39 1358 52 1303 q 484 1402 260 1371 l 506 1303 q 323 1284 415 1293 l 323 1058 l 492 1058 l 492 964 l 323 964 l 323 802 l 378 845 q 524 682 456 766 l 444 617 q 323 772 385 701 l 323 125 l 222 125 l 222 726 q 53 407 152 538 q 7 519 33 464 m 640 519 l 743 519 l 743 327 q 830 248 743 248 l 960 248 q 1061 316 1046 248 q 1081 442 1073 370 q 1184 401 1126 422 q 1154 274 1171 332 q 990 156 1124 156 l 810 156 q 640 321 640 156 l 640 519 m 1031 1251 l 689 1251 q 564 1104 629 1172 l 925 1104 q 1031 1251 982 1181 m 494 519 l 585 487 q 477 217 538 345 q 385 259 434 240 q 494 519 449 374 m 1177 477 l 1264 517 q 1386 274 1340 372 l 1293 229 q 1177 477 1248 339 m 795 544 l 868 594 q 1009 419 948 502 l 926 361 q 795 544 867 456 z "\n    },\n    "给": {\n      "ha": 1389,\n      "x_min": 18,\n      "x_max": 1378,\n      "o": "m 551 693 l 1237 693 l 1237 121 l 1134 121 l 1134 212 l 654 212 l 654 119 l 551 119 l 551 693 m 184 646 q 467 667 191 646 q 454 581 460 625 q 68 543 228 560 l 46 628 q 252 914 127 705 q 46 899 165 909 l 18 983 q 273 1450 134 1116 l 380 1412 q 136 991 247 1157 q 297 994 217 993 q 399 1180 346 1078 l 499 1137 q 184 646 311 823 m 1134 601 l 654 601 l 654 304 l 1134 304 l 1134 601 m 971 1450 l 943 1404 q 1378 975 1101 1145 q 1299 888 1339 936 q 886 1313 1034 1077 q 502 871 738 1063 q 423 945 476 901 q 850 1450 697 1154 l 971 1450 m 597 947 l 1191 947 l 1191 854 l 597 854 l 597 947 m 23 331 q 476 425 275 378 q 477 330 475 376 q 58 232 201 273 l 23 331 z "\n    },\n    "超": {\n      "ha": 1389,\n      "x_min": 23,\n      "x_max": 1370,\n      "o": "m 23 248 q 134 791 126 427 l 235 785 q 214 541 231 654 q 343 370 263 435 l 343 873 l 30 873 l 30 971 l 301 971 l 301 1166 l 77 1166 l 77 1264 l 301 1264 l 301 1457 l 407 1457 l 407 1264 l 609 1264 l 609 1166 l 407 1166 l 407 971 l 627 971 l 627 873 l 445 873 l 445 662 l 639 662 l 639 566 l 445 566 l 445 311 q 671 269 543 270 q 1370 274 929 264 q 1332 170 1345 214 q 637 172 922 167 q 193 408 309 180 q 83 121 153 232 q 23 248 56 184 m 711 836 l 1278 836 l 1278 351 l 1177 351 l 1177 410 l 811 410 l 811 343 l 711 343 l 711 836 m 644 1308 l 644 1398 l 1293 1398 q 1274 1086 1286 1214 q 1112 928 1259 932 q 943 932 1039 926 q 922 1039 935 981 q 1092 1024 1023 1023 q 1177 1111 1169 1024 q 1191 1308 1187 1190 l 933 1308 q 705 879 922 1001 q 640 964 680 921 q 831 1308 827 1067 l 644 1308 m 1177 745 l 811 745 l 811 500 l 1177 500 l 1177 745 z "\n    },\n    "越": {\n      "ha": 1389,\n      "x_min": 26,\n      "x_max": 1370,\n      "o": "m 26 233 q 134 791 130 422 l 228 785 q 213 538 227 652 q 339 373 262 435 l 339 873 l 30 873 l 30 966 l 298 966 l 298 1166 l 77 1166 l 77 1259 l 298 1259 l 298 1455 l 393 1455 l 393 1259 l 602 1259 l 602 1166 l 393 1166 l 393 966 l 624 966 l 624 873 l 434 873 l 434 658 l 608 658 l 608 566 l 434 566 l 434 315 q 666 269 534 270 q 1370 274 981 264 q 1332 168 1345 214 q 637 172 947 168 q 191 406 316 178 q 83 121 155 232 q 26 233 56 184 m 770 395 q 987 644 895 511 q 917 1112 933 829 l 758 1112 l 758 650 q 897 773 819 703 q 917 674 905 720 q 755 529 837 606 q 692 457 726 500 l 624 525 q 666 658 666 579 l 666 1200 l 913 1200 q 909 1459 909 1328 l 1001 1459 q 1005 1200 1000 1336 l 1340 1200 l 1340 1112 l 1009 1112 q 1058 750 1020 902 q 1180 1017 1133 878 l 1271 979 q 1093 632 1196 792 q 1154 507 1120 560 q 1202 467 1179 467 q 1230 517 1222 467 q 1253 726 1242 604 q 1347 692 1316 703 q 1318 471 1332 544 q 1215 355 1298 355 q 1088 431 1142 355 q 1027 538 1054 476 q 844 331 944 426 q 770 395 818 362 m 1074 1404 l 1145 1455 q 1278 1298 1203 1392 l 1199 1242 q 1074 1404 1130 1340 z "\n    },\n    "！": {\n      "ha": 1389,\n      "x_min": 608,\n      "x_max": 781,\n      "o": "m 761 1321 l 746 570 l 639 570 l 624 1321 l 761 1321 m 694 426 q 755 401 730 426 q 781 340 781 376 q 755 279 781 304 q 694 255 730 255 q 633 279 659 255 q 608 340 608 304 q 633 401 608 376 q 694 426 659 426 z "\n    }\n  },\n  "familyName": "Microsoft YaHei",\n  "ascender": 1636,\n  "descender": -296,\n  "underlinePosition": -119,\n  "underlineThickness": 80,\n  "boundingBox": {\n    "yMin": -186,\n    "xMin": -220,\n    "yMax": 1706,\n    "xMax": 1763\n  },\n  "resolution": 1000,\n  "original_font_information": {\n    "format": 0,\n    "copyright": "`2005 Microsoft Corporation. All rights reserved.",\n    "fontFamily": "Microsoft YaHei",\n    "fontSubfamily": "Regular",\n    "uniqueID": "Microsoft YaHei-Regular",\n    "fullName": "Microsoft YaHei",\n    "version": "Version 0.71",\n    "postScriptName": "MicrosoftYaHei",\n    "trademark": "Microsoft YaHei is either a registered trademark or a trademark of Microsoft Corporation in the United States and/or other countries.",\n    "manufacturer": "Microsoft Corporation",\n    "designer": "Founder",\n    "description": "Microsoft YaHei is a Simplified Chinese font developed by taking advantage of ClearType technology, and it provides excellent reading experience particularly onscreen. The font is very legible at small sizes.",\n    "manufacturerURL": "http://www.microsoft.com/typography",\n    "designerURL": "http://www.founder.com.cn/cn",\n    "licence": "\\r\\nNOTIFICATION OF LICENSE AGREEMENT \\r\\n\\r\\nThis font software is part of the Microsoft software product in which it was included and is provided under the end user license agreement (“EULA”) for that Microsoft software product. The terms and conditions of the EULA govern the use of font software. Please refer to the applicable Microsoft product EULA if you have any questions about how you may use this font software. Microsoft reserves all rights that are not expressly granted in the EULA. For products that may have installed this font please see the license link.\\r\\n",\n    "licenceURL": "http://www.microsoft.com/typography/fonts"\n  },\n  "cssFontWeight": "normal",\n  "cssFontStyle": "normal"\n};\n/* harmony default export */ var part_font = (font);\n// CONCATENATED MODULE: ./src/part/scoreText.js\n\nclass scoreText_Text {\n  constructor() {\n    this.font = new THREE.Font(part_font);\n    this.size = 5.0;\n    this.height = 0.1;\n    this.fillStyle = 0x666666;\n  }\n\n  init(options) {\n    this.material = new THREE.MeshBasicMaterial({\n      color: this.fillStyle,\n      transparent: true\n    });\n    if (options && options.opacity) this.material.opacity = options.opacity;\n    this.options = options || {};\n    const geometry = new THREE.TextGeometry(\'0\', {\n      \'font\': this.font,\n      \'size\': this.size,\n      \'height\': this.height\n    });\n    this.instance = new THREE.Mesh(geometry, this.material);\n    this.instance.name = \'scoreText\';\n  }\n\n  updateScore(score) {\n    const scoreStr = score.toString();\n    this.instance = new THREE.Mesh(new THREE.TextGeometry(scoreStr, {\n      \'font\': this.font,\n      \'size\': this.size,\n      \'height\': this.height\n    }), this.material);\n  }\n\n}\n// CONCATENATED MODULE: ./public/audio/scale_intro.mp3\n/* harmony default export */ var scale_intro = (__webpack_require__.p + "audio/scale_intro.c2b27c52.mp3");\n// CONCATENATED MODULE: ./public/audio/scale_loop.mp3\n/* harmony default export */ var scale_loop = (__webpack_require__.p + "audio/scale_loop.063fe658.mp3");\n// CONCATENATED MODULE: ./public/audio/start.mp3\n/* harmony default export */ var audio_start = (__webpack_require__.p + "audio/start.15c19cae.mp3");\n// CONCATENATED MODULE: ./public/audio/fall_1.mp3\n/* harmony default export */ var fall_1 = (__webpack_require__.p + "audio/fall_1.e50746ce.mp3");\n// CONCATENATED MODULE: ./public/audio/fall_2.mp3\n/* harmony default export */ var fall_2 = (__webpack_require__.p + "audio/fall_2.f0310012.mp3");\n// CONCATENATED MODULE: ./src/audiomanager/index.js\n\n\n\n\n\n\n\nconst audioList = [{\n  key: "scaleIntro",\n  source: scale_intro\n}, {\n  key: "scaleLoop",\n  source: scale_loop\n}, {\n  key: "audioStart",\n  source: audio_start\n}, {\n  key: "audioFall1",\n  source: fall_1\n}, {\n  key: "audioFall2",\n  source: fall_2\n}];\n\nclass audiomanager_AudioManager {\n  constructor() {\n    this.scaleLoopBuffer = "";\n    this.scaleIntroBuffer = "";\n    this.audioComboBuffer = "";\n    this.num = 0;\n  }\n\n  init() {\n    this.listener = new THREE.AudioListener();\n    this.sound = new THREE.Audio(this.listener);\n    this.sound.setVolume(.8);\n\n    this.sound.onEnded = () => {\n      this.sound.stop();\n\n      if (part_bottle.status === common["f" /* STATUS */].SKRINK) {\n        this.sound.setBuffer(this.scaleLoopBuffer);\n        this.sound.setLoop(true);\n        this.sound.play();\n      }\n    };\n\n    return new Promise((resolve, reject) => {\n      audioList.map(item => {\n        const {\n          key,\n          source\n        } = item;\n        let loader = new THREE.AudioLoader();\n        loader.load(source, buffer => {\n          this[`${key}Buffer`] = buffer;\n          this.num++;\n\n          if (this.num >= audioList.length - 1) {\n            resolve();\n          }\n        });\n      });\n    });\n  }\n\n  shrinkPlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.scaleIntroBuffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  shrinkStop() {\n    this.sound.stop();\n  }\n\n  startPlay() {\n    this.sound.setBuffer(this.audioStartBuffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  fallBlockPlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.audioFall2Buffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  fallPlanePlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.audioFall1Buffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n}\n\n/* harmony default export */ var audiomanager = (new audiomanager_AudioManager());\n// CONCATENATED MODULE: ./src/stage/stage-game-main.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nconst HIT_NEXT_BLOCK_NORMAL = 1;\nconst HIT_BLOCK_CURRENT = 2;\nconst GAME_OVER_NEXT_BLOCK_FRONT = 3;\nconst GAME_OVER_CURRENT_BLOCK_BACK = 4;\nconst GAME_OVER_NEXT_BLOCK_BACK = 5;\nconst GAME_OVER_BOTH = 6;\nconst HIT_NEXT_BLOCK_CENTER = 7;\nclass stage_game_main_StageGameMain {\n  constructor(callback) {\n    _defineProperty(this, "onTouchStart", e => {\n      console.log(\'touch start\');\n      if (this.state !== \'stop\') return;\n      this.touchStartTime = Date.now();\n      audiomanager.shrinkPlay();\n      this.bottle.shrink();\n      this.currentBlock.shrink();\n    });\n\n    _defineProperty(this, "onTouchEnd", e => {\n      console.log(\'touch end\');\n      if (this.state !== \'stop\') return;\n      if (this.touchStartTime === 0) return;\n      audiomanager.shrinkStop();\n      this.touchEndTime = Date.now();\n      const duration = this.touchEndTime - this.touchStartTime;\n      this.touchStartTime = 0;\n      this.bottle.velocity.vx = Math.min(duration / 6, 120);\n      this.bottle.velocity.vx = +this.bottle.velocity.vx.toFixed(2);\n      this.bottle.velocity.vy = Math.min(150 + duration / 30, 300);\n      this.bottle.velocity.vy = +this.bottle.velocity.vy.toFixed(2);\n      this.state = "jump";\n      this.hit = this.getHitStatus(this.bottle, this.currentBlock, this.nextBlock, common["a" /* BLOCKCONFIG */].height / 2 - (1 - this.currentBlock.instance.scale.y) * common["a" /* BLOCKCONFIG */].height);\n      this.checkingHit = true;\n      this.currentBlock.rebound();\n      this.bottle.rotate();\n      this.bottle.jump();\n    });\n\n    this.callback = callback;\n  }\n\n  init() {\n    console.log(`GameMain init`);\n    const {\n      canvas\n    } = common["g" /* common */];\n    this.canvas = canvas;\n    this.score = 0;\n    this.scene = src_scene;\n    this.ground = ground;\n    this.bottle = part_bottle;\n    this.gravity = common["g" /* common */].gravity;\n    this.scoreText = new scoreText_Text();\n    this.scoreText.init();\n    this.scene.init();\n    this.ground.init();\n    this.bottle.init();\n    audiomanager.init().then(() => {\n      this.addBottle();\n    });\n    this.addGround();\n    this.addInitBlock();\n    this.addScore();\n    this.render();\n  }\n\n  restart() {\n    console.log(\'restart Game\');\n    this.score = 0;\n    this.state = \'\';\n    this.deleteObjectsFromScene();\n    this.scene.reset();\n    this.bottle.reset();\n    this.ground.reset();\n    this.updateScore(0);\n    this.addInitBlock();\n    this.addGround();\n    this.addBottle();\n  }\n\n  addInitBlock() {\n    const scene = this.scene.instance;\n    this.currentBlock = new cuboid_CuboidBlock(-15, 0, 0);\n    this.nextBlock = new cylinder_CylinderBlock(23, 0, 0);\n    scene.add(this.currentBlock.instance);\n    scene.add(this.nextBlock.instance);\n    const initDirection = 0;\n    this.targetPosition = this.nextBlock.instance.position;\n    this.setDirection(initDirection);\n  }\n\n  addScore() {\n    this.scene.addScore(this.scoreText.instance);\n  }\n\n  updateScore(score) {\n    this.scoreText.updateScore(score);\n    this.scene.updateScore(this.scoreText.instance);\n  }\n\n  addGround() {\n    const scene = this.scene.instance;\n    scene.add(this.ground.instance);\n  }\n\n  addBottle() {\n    const scene = this.scene.instance;\n    audiomanager.startPlay();\n    scene.add(this.bottle.instance);\n    this.bottle.show().then(() => {\n      this.addTouchEvent();\n      this.state = \'stop\';\n      console.log(\'show end\');\n    });\n  }\n\n  addTouchEvent() {\n    this.canvas.addEventListener("touchstart", this.onTouchStart, false);\n    this.canvas.addEventListener("touchend", this.onTouchEnd, false);\n  }\n\n  removeTouchEvent() {\n    this.canvas.removeEventListener("touchstart", this.onTouchStart, false);\n    this.canvas.removeEventListener("touchend", this.onTouchEnd, false);\n  }\n\n  setDirection(direction) {\n    const currentPosition = {\n      x: this.bottle.instance.position.x,\n      z: this.bottle.instance.position.z\n    };\n    this.axis = new THREE.Vector3(this.targetPosition.x - currentPosition.x, 0, this.targetPosition.z - currentPosition.z);\n    this.axis.normalize();\n    this.bottle.setDirection(direction, this.axis);\n  }\n\n  render() {\n    if (this.currentBlock) {\n      this.currentBlock.update();\n    }\n\n    if (this.visible) {\n      this.scene.render();\n    }\n\n    this.checkBottleHit();\n\n    if (this.bottle) {\n      this.bottle.update();\n    }\n\n    requestAnimationFrame(this.render.bind(this));\n  }\n\n  show() {\n    console.log(`GameMain show`);\n    this.visible = true;\n  }\n\n  hide() {\n    console.log(`GameNain hide`);\n    this.visible = false;\n  }\n\n  deleteObjectsFromScene() {\n    let obj = this.scene.instance.getObjectByName(\'block\');\n\n    while (obj) {\n      this.scene.instance.remove(obj);\n\n      if (obj.geometry) {\n        obj.geometry.dispose();\n      }\n\n      if (obj.material) {\n        obj.material.dispose();\n      }\n\n      obj = this.scene.instance.getObjectByName(\'block\');\n    }\n\n    this.scene.instance.remove(this.bottle.instance);\n    this.scene.instance.remove(this.ground.instance);\n  }\n\n  checkBottleHit() {\n    if (this.checkingHit && this.bottle.instance.position.y <= common["a" /* BLOCKCONFIG */].height / 2 + 0.1 && this.bottle.status === \'jump\' && this.bottle.flyingTime > 0.3) {\n      this.checkingHit = false;\n\n      if (this.hit === HIT_NEXT_BLOCK_NORMAL || this.hit === HIT_NEXT_BLOCK_CENTER) {\n        this.state = \'stop\';\n        this.bottle.stop();\n        this.bottle.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n        this.bottle.instance.position.x = this.bottle.destination[0];\n        this.bottle.instance.position.z = this.bottle.destination[1];\n        this.updateScore(++this.score);\n        this.updateNextBlock();\n      } else if (this.hit === HIT_BLOCK_CURRENT) {\n        this.state = \'stop\';\n        this.bottle.stop();\n        this.bottle.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n        this.bottle.instance.position.x = this.bottle.destination[0];\n        this.bottle.instance.position.z = this.bottle.destination[1];\n      } else {\n        if (this.hit === GAME_OVER_CURRENT_BLOCK_BACK || this.hit === GAME_OVER_NEXT_BLOCK_BACK) {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.forerake();\n          audiomanager.fallBlockPlay();\n        } else if (this.hit === GAME_OVER_NEXT_BLOCK_FRONT) {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.hypsokinesis();\n          audiomanager.fallBlockPlay();\n        } else {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.fall();\n          audiomanager.fallPlanePlay();\n        }\n\n        this.state = \'over\';\n        this.removeTouchEvent();\n        setTimeout(() => {\n          this.callback.showGameOverStage();\n        }, 1500);\n      }\n    }\n  }\n\n  getHitStatus(bottle, currentBlock, nextBlock, initY) {\n    let flyingTime = bottle.velocity.vy / this.gravity * 2;\n    initY = initY || +bottle.instance.position.y.toFixed(2);\n    let destinationY = common["a" /* BLOCKCONFIG */].height / 2;\n    let differenceY = destinationY;\n    let time = +((-bottle.velocity.vy + Math.sqrt(Math.pow(bottle.velocity.vy, 2) - 2 * this.gravity * differenceY)) / -this.gravity).toFixed(2);\n    flyingTime -= time;\n    flyingTime = +flyingTime.toFixed(2);\n    let destination = [];\n    let bottlePosition = new THREE.Vector2(bottle.instance.position.x, bottle.instance.position.z);\n    let translate = new THREE.Vector2(this.axis.x, this.axis.z).setLength(bottle.velocity.vx * flyingTime);\n    bottlePosition.add(translate);\n    bottle.destination = [+bottlePosition.x.toFixed(2), +bottlePosition.y.toFixed(2)];\n    destination.push(+bottlePosition.x.toFixed(2), +bottlePosition.y.toFixed(2));\n    let result1, result2;\n\n    if (nextBlock) {\n      let nextDiff = Math.pow(destination[0] - nextBlock.instance.position.x, 2) + Math.pow(destination[1] - nextBlock.instance.position.z, 2);\n      let nextPolygon = nextBlock.getVertices();\n\n      if (utils.pointInPolygon(destination, nextPolygon)) {\n        if (Math.abs(nextDiff) < 5) {\n          return HIT_NEXT_BLOCK_NORMAL;\n        } else {\n          return HIT_NEXT_BLOCK_CENTER;\n        }\n      } else if (utils.pointInPolygon([destination[0] - this.bottle.width, destination[1]], nextPolygon) || utils.pointInPolygon([destination[0], destination[1] + this.bottle.depth / 2], nextPolygon)) {\n        result1 = GAME_OVER_NEXT_BLOCK_BACK;\n      } else if (utils.pointInPolygon([destination[0], destination[1] - this.bottle.depth / 2], nextPolygon) || utils.pointInPolygon([destination[0] + this.bottle.depth / 2, destination[1]], nextPolygon)) {\n        result1 = GAME_OVER_NEXT_BLOCK_FRONT;\n      }\n    }\n\n    let currentPolygon = currentBlock.getVertices();\n\n    if (utils.pointInPolygon(destination, currentPolygon)) {\n      return HIT_BLOCK_CURRENT;\n    } else if (utils.pointInPolygon([destination[0], destination[1] + this.bottle.depth], currentPolygon) || utils.pointInPolygon([destination[0] - this.bottle.width / 2, destination[1]], currentPolygon)) {\n      if (result1) return GAME_OVER_BOTH;\n      return GAME_OVER_CURRENT_BLOCK_BACK;\n    }\n\n    return result1 || result2 || 0;\n  }\n\n  updateNextBlock() {\n    const seed = Math.round(Math.random());\n    const type = seed ? \'cuboid\' : \'cylinder\';\n    const direction = Math.round(Math.random());\n    const width = Math.round(Math.random() * 6) + 10;\n    const distance = Math.round(Math.random() * 25) + 20;\n    this.currentBlock = this.nextBlock;\n    const targetPosition = this.targetPosition = {};\n\n    if (direction === 0) {\n      targetPosition.x = this.currentBlock.instance.position.x + distance;\n      targetPosition.y = this.currentBlock.instance.position.y;\n      targetPosition.z = this.currentBlock.instance.position.z;\n    }\n\n    if (direction === 1) {\n      targetPosition.x = this.currentBlock.instance.position.x;\n      targetPosition.y = this.currentBlock.instance.position.y;\n      targetPosition.z = this.currentBlock.instance.position.z - distance;\n    }\n\n    this.setDirection(direction);\n\n    if (type === common["b" /* BLOCKTYPE */].CUBOID) {\n      this.nextBlock = new cuboid_CuboidBlock(targetPosition.x, targetPosition.y, targetPosition.z, \'popup\', width);\n    } else if (type === common["b" /* BLOCKTYPE */].CYLINDER) {\n      this.nextBlock = new cylinder_CylinderBlock(targetPosition.x, targetPosition.y, targetPosition.z, \'popup\', width);\n    }\n\n    this.scene.instance.add(this.nextBlock.instance);\n    const cameraTargetPosition = {\n      x: (this.currentBlock.instance.position.x + this.nextBlock.instance.position.x) / 2,\n      y: (this.currentBlock.instance.position.y + this.nextBlock.instance.position.y) / 2,\n      z: (this.currentBlock.instance.position.z + this.nextBlock.instance.position.z) / 2\n    };\n    this.scene.updateCameraPosition(cameraTargetPosition);\n    this.ground.updatePosition(cameraTargetPosition);\n  }\n\n}\n// CONCATENATED MODULE: ./public/images/replay.png\n/* harmony default export */ var replay = (__webpack_require__.p + "images/replay.d180fbab.png");\n// CONCATENATED MODULE: ./src/stage/stage-game-over.js\nfunction stage_game_over_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass stage_game_over_StageGameOver {\n  constructor(callback) {\n    stage_game_over_defineProperty(this, "addTouchEvent", e => {\n      this.canvas.addEventListener(\'touchend\', this.onTouchEnd.bind(this), true);\n    });\n\n    stage_game_over_defineProperty(this, "removeTouchEvent", e => {\n      this.canvas.removeEventListener(\'touchend\', this.onTouchEnd.bind(this), true);\n    });\n\n    this.callback = callback;\n    const {\n      canvas\n    } = common["g" /* common */];\n    this.canvas = canvas;\n    this.score = 0;\n  }\n\n  init() {\n    console.log(`GameOver init`);\n    this.render();\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      aspect\n    } = common["g" /* common */];\n    const canvas = document.createElement("canvas");\n    canvas.width = width;\n    canvas.height = height;\n    this.context = canvas.getContext(\'2d\');\n    this.context.fillStyle = \'rgba(0,0,0,.7)\';\n    this.context.fillRect((width - 200) / 2, (height - 200) / 2, 200, 200);\n    this.context.fillStyle = \'#eee\';\n    this.context.font = \'22px Georgia\';\n    this.context.fillText(\'Game Over\', (width - 200) / 2 + 45, (height - 200) / 2 + 55);\n    this.replay_btn = new Image();\n\n    this.replay_btn.onload = () => {\n      this.context.drawImage(this.replay_btn, width / 2 - 60, (height - 200) / 2 + 125, 120, 47);\n    };\n\n    this.replay_btn.src = replay;\n    this.texture = new THREE.Texture(canvas);\n    this.material = new THREE.MeshBasicMaterial({\n      map: this.texture,\n      transparent: true // side: THREE.DoubleSide\n\n    });\n    this.geometry = new THREE.PlaneGeometry(60, 60 * aspect);\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.z = 20;\n    this.mesh.visible = false;\n    this.texture.needsUpdate = true;\n    src_scene.camera.instance.add(this.mesh);\n  }\n\n  show() {\n    console.log(`GameOver show`);\n    this.mesh.visible = true;\n    this.score = this.callback.getScore();\n    this.addTouchEvent();\n  }\n\n  hide() {\n    console.log(`GameOver hide`);\n    this.mesh.visible = false;\n    this.removeTouchEvent();\n    console.log(\'------------\');\n  }\n\n  onTouchEnd(e) {\n    if (!this.mesh.visible) return;\n    this.callback.restartGame();\n  }\n\n}\n// CONCATENATED MODULE: ./src/game/stage.js\n\n\n\nclass stage_GameStage {\n  constructor() {}\n\n  getScore() {\n    return this.stage_game_main.score;\n  }\n\n  showGameOverStage() {\n    this.stage_game_over.show();\n  }\n\n  showGameMainStage() {\n    this.stage_game_main.show();\n    this.stage_game_over.hide();\n  }\n\n  restartGame() {\n    this.stage_game_main.show();\n    this.stage_game_over.hide();\n    this.stage_game_main.restart();\n  }\n\n  initMainStage(callback) {\n    this.stage_game_main = new stage_game_main_StageGameMain(callback);\n    this.stage_game_main.init();\n  }\n\n  initOverStage(callback) {\n    this.stage_game_over = new stage_game_over_StageGameOver(callback);\n    this.stage_game_over.init();\n  }\n\n}\n\n/* harmony default export */ var stage = (new stage_GameStage());\n// CONCATENATED MODULE: ./src/game/controller.js\n\n\n\n\nclass controller_GameController {\n  constructor() {\n    this.game_model = model;\n    this.game_stage = stage;\n    this.game_model.changeStage.attach((sender, args) => {\n      switch (args.stage) {\n        case common["e" /* STAGEGROUP */].GAMEOVER:\n          this.game_stage.showGameOverStage();\n          break;\n\n        case common["e" /* STAGEGROUP */].GAMEMAIN:\n          this.game_stage.showGameMainStage();\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  initController() {\n    this.game_stage.initMainStage({\n      showGameOverStage: () => this.game_model.setStage(common["e" /* STAGEGROUP */].GAMEOVER)\n    });\n    this.game_stage.initOverStage({\n      restartGame: () => this.game_stage.restartGame(),\n      getScore: () => this.game_stage.getScore()\n    });\n    this.game_model.setStage(common["e" /* STAGEGROUP */].GAMEMAIN); // setTimeout(()=>{\n    //     this.game_model.setStage(STAGEGROUP.GAMEOVER)\n    // },3000)\n  }\n\n}\n\n/* harmony default export */ var controller = (new controller_GameController());\n// CONCATENATED MODULE: ./src/game/index.js\n\n\nlet app = document.getElementById("app");\nlet game_canvas = document.createElement("canvas");\nlet game_width = app.clientWidth,\n    game_height = app.clientHeight;\nconst game_aspect = game_height / game_width;\ngame_canvas.width = game_width;\ngame_canvas.height = game_height;\napp.append(game_canvas);\ncommon["g" /* common */].canvas = game_canvas;\ncommon["g" /* common */].width = game_width;\ncommon["g" /* common */].height = game_height;\ncommon["g" /* common */].aspect = game_aspect;\n\nclass game_Game {\n  constructor() {}\n\n  init() {\n    controller.initController();\n  }\n\n}\n\n/* harmony default export */ var game = (new game_Game());\n// CONCATENATED MODULE: ./src/main.js\n\n\nclass main_Main {\n  constructor() {}\n\n  static init() {\n    game.init();\n  }\n\n}\n\n/* harmony default export */ var main = (main_Main);\n// CONCATENATED MODULE: ./app.js\n\n\n!function () {\n  main.init();\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')}]);